{
	"info": {
		"_postman_id": "0ce978de-6c0f-4a92-ba8d-5a504308eab7",
		"name": "All",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create Entity",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"bbinspect_id1\", pm.response.json().id);",
							"",
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.propertyName).to.eq(\"Buggy Hotel\");",
							"    pm.expect(res.inspectionType).to.eq(\"K9\");",
							"    pm.expect(res.reason).to.eq(\"Health and safety\");",
							"    pm.expect(res.dateModified).to.eq(null);",
							"    // const self_url = pm.environment.get(\"app_url\") + \"/slips/\" + pm.response.json()[\"id\"];",
							"    // pm.expect(pm.response.json()[\"self\"]).to.eq(self_url);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"inspectionType\": \"K9\",\n    \"reason\": \"Health and safety\",\n    \"propertyName\": \"Buggy Hotel\",\n    \"address\": \"456 N. Smart St.\",\n    \"city\": \"Mesa\",\n    \"state\": \"AZ\",\n    \"zipCode\": \"85233\",\n    \"technician\": \"B. Destroyer\",\n    \"madeContact\": true,\n    \"contactName\": \"Ovie Whelmed\",\n    \"contactTitle\": \"manager\",\n    \"notes\": \"infested yo\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/bedbug-inspection",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"bedbug-inspection"
					]
				}
			},
			"response": []
		},
		{
			"name": "Missing Attributes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"photos\": [\"mockphoto@faker.com\"],\n    \"propertyName\": \"Buggy Hotel\",\n    \"address\": \"456 N. Smart St.\",\n    \"city\": \"Mesa\",\n    \"zipCode\": \"85233\",\n    \"technician\": \"B. Destroyer\",\n    \"madeContact\": true,\n    \"contactName\": \"Ovie Whelmed\",\n    \"contactTitle\": \"manager\",\n    \"notes\": \"infested yo\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/bedbug-inspection",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"bedbug-inspection"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Entity XML input Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"415 status code\", function () {",
							"    pm.response.to.have.status(415);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"isRegular\": false,\n    \"isExtreme\": true,\n    \"photos\": [\"mockphoto@faker.com\"],\n    \"propertyName\": \"Buggy Hotel\",\n    \"address\": \"456 N. Smart St.\",\n    \"city\": \"Mesa\",\n    \"zipCode\": \"85233\",\n    \"technician\": \"B. Destroyer\",\n    \"madeContact\": true,\n    \"contactName\": \"Ovie Whelmed\",\n    \"contactTitle\": \"manager\",\n    \"notes\": \"infested yo\"\n}",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/bedbug-inspection",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"bedbug-inspection"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Entities",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/bedbug-inspection",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"bedbug-inspection"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Entity by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.id).to.eq(pm.environment.get(\"bbinspect_id1\"));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/bedbug-inspection/{{bbinspect_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"bedbug-inspection",
						"{{bbinspect_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get invalid entity id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/bedbug-inspection/123",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"bedbug-inspection",
						"123"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update entity id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.id).to.eq(pm.environment.get(\"bbinspect_id1\"));",
							"    pm.expect(res.propertyName).to.eq(\"Bugatropolis Motel\");",
							"    pm.expect(res.status).to.eq(\"Open\");",
							"    pm.expect(res.dateModified).to.not.be.null;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"status\": \"Open\",\n    \"propertyName\": \"Bugatropolis Motel\",\n    \"isExtreme\": false,\n    \"isRegular\": true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/bedbug-inspection/{{bbinspect_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"bedbug-inspection",
						"{{bbinspect_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update entity: bad input",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"propertyName\": 123,\n    \"technician\": \"Ryan Owens\",\n    \"madeContact\": true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/bedbug-inspection/{{bbinspect_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"bedbug-inspection",
						"{{bbinspect_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update entity: XML input",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"415 status code\", function () {",
							"    pm.response.to.have.status(415);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"propertyName\": \"The Good Place\",\n    \"technician\": \"Ryan Owens\",\n    \"madeContact\": true\n}",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/bedbug-inspection/{{bbinspect_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"bedbug-inspection",
						"{{bbinspect_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Entity",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"bbtreat_id1\", pm.response.json().id);",
							"",
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.propertyName).to.eq(\"Buggy Hotel\");",
							"    pm.expect(res.isExtreme).to.eq(true);",
							"    pm.expect(res.reason).to.eq(\"move out\");",
							"    pm.expect(res.dateModified).to.eq(null);",
							"    pm.expect(res.photos.length).to.be.above(0);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"isExtreme\": true,\n    \"reason\": \"move out\",\n    \"photos\": [\"mockphoto@faker.com\"],\n    \"propertyName\": \"Buggy Hotel\",\n    \"address\": \"456 N. Smart St.\",\n    \"city\": \"Mesa\",\n    \"state\": \"AZ\",\n    \"zipCode\": \"85233\",\n    \"technician\": \"B. Destroyer\",\n    \"madeContact\": true,\n    \"contactName\": \"Ovie Whelmed\",\n    \"contactTitle\": \"manager\",\n    \"notes\": \"infested yo\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/bedbug-treatment",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"bedbug-treatment"
					]
				}
			},
			"response": []
		},
		{
			"name": "Missing Attributes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"propertyName\": \"Buggy Hotel\",\n    \"address\": \"123 W. Ash St. Gilbert, AZ 85233\",\n    \"technician\": \"Bobby Flay\",\n    \"madeContact\": null,\n    \"contactName\": \"Fly O. Wall\",\n    \"contactTitle\": \"Manager\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/bedbug-treatment",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"bedbug-treatment"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Entity XML input",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"415 status code\", function () {",
							"    pm.response.to.have.status(415);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"isRegular\": false,\n    \"isExtreme\": true,\n    \"photos\": [\"mockphoto@faker.com\"],\n    \"propertyName\": \"Buggy Hotel\",\n    \"address\": \"456 N. Smart St.\",\n    \"city\": \"Mesa\",\n    \"zipCode\": \"85233\",\n    \"technician\": \"B. Destroyer\",\n    \"madeContact\": true,\n    \"contactName\": \"Ovie Whelmed\",\n    \"contactTitle\": \"manager\",\n    \"notes\": \"infested yo\"\n}",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/bedbug-treatment",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"bedbug-treatment"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Entities",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/bedbug-treatment",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"bedbug-treatment"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Entity by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.id).to.eq(pm.environment.get(\"bbtreat_id1\"));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/bedbug-treatment/{{bbtreat_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"bedbug-treatment",
						"{{bbtreat_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get invalid entity id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/bedbug-treatment/123",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"bedbug-treatment",
						"123"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update entity id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.id).to.eq(pm.environment.get(\"bbtreat_id1\"));",
							"    pm.expect(res.propertyName).to.eq(\"Bugatopia Motel\");",
							"    pm.expect(res.isExtreme).to.eq(false);",
							"    pm.expect(res.dateModified).to.not.be.null;",
							"    pm.expect(res.status).to.eq(\"Open\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"status\": \"Open\",\n    \"propertyName\": \"Bugatopia Motel\",\n    \"isExtreme\": false\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/bedbug-treatment/{{bbtreat_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"bedbug-treatment",
						"{{bbtreat_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update entity: bad input",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"propertyName\": 123,\n    \"technician\": \"Ryan Owens\",\n    \"madeContact\": true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/bedbug-treatment/{{bbtreat_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"bedbug-treatment",
						"{{bbtreat_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update entity: XML input",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"415 status code\", function () {",
							"    pm.response.to.have.status(415);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"propertyName\": \"The Good Place\",\n    \"technician\": \"Ryan Owens\",\n    \"madeContact\": true\n}",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/bedbug-treatment/{{bbtreat_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"bedbug-treatment",
						"{{bbtreat_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Entity",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"birdex_id1\", pm.response.json().id);",
							"",
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.propertyName).to.eq(\"The Bird's Nest\");",
							"    pm.expect(res.equipment).to.eq(\"Boom Lift\");",
							"    pm.expect(res.boomLiftHeight).to.eq(100);",
							"    pm.expect(res.photos.length).to.be.above(0);",
							"    pm.expect(res.dateModified).to.eq(null);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"equipment\": \"Boom Lift\",\n    \"spikeLength\": 5,\n    \"nettingLength\": 130,\n    \"nettingWidth\": 8,\n    \"tensionLineLength\": 12,\n    \"boomLiftHeight\": 100,\n    \"photos\": [\"mockphoto@faker.com\"],\n    \"propertyName\": \"The Bird's Nest\",\n    \"address\": \"456 N. Smart St.\",\n    \"city\": \"Mesa\",\n    \"state\": \"AZ\",\n    \"zipCode\": \"85233\",\n    \"technician\": \"B. Destroyer\",\n    \"madeContact\": true,\n    \"contactName\": \"Ovie Whelmed\",\n    \"contactTitle\": \"manager\",\n    \"notes\": \"bird crap e'rywhere\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/bird-exclusion",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"bird-exclusion"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Entity XML input",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"415 status code\", function () {",
							"    pm.response.to.have.status(415);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"isRegular\": false,\n    \"isExtreme\": true,\n    \"photos\": [\"mockphoto@faker.com\"],\n    \"propertyName\": \"Buggy Hotel\",\n    \"address\": \"456 N. Smart St.\",\n    \"city\": \"Mesa\",\n    \"zipCode\": \"85233\",\n    \"technician\": \"B. Destroyer\",\n    \"madeContact\": true,\n    \"contactName\": \"Ovie Whelmed\",\n    \"contactTitle\": \"manager\",\n    \"notes\": \"infested yo\"\n}",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/bird-exclusion",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"bird-exclusion"
					]
				}
			},
			"response": []
		},
		{
			"name": "Missing Attributes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"propertyName\": \"The Bird's Nest\",\n    \"address\": \"123 W. Ash St. Gilbert, AZ 85233\",\n    \"technician\": \"Bobby Flay\",\n    \"madeContact\": null,\n    \"contactName\": \"Fly O. Wall\",\n    \"contactTitle\": \"Manager\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/bird-exclusion",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"bird-exclusion"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Entities",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/bird-exclusion",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"bird-exclusion"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Entity by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.id).to.eq(pm.environment.get(\"birdex_id1\"));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/bird-exclusion/{{birdex_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"bird-exclusion",
						"{{birdex_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get invalid entity id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/bird-exclusion/123",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"bird-exclusion",
						"123"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update entity id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.id).to.eq(pm.environment.get(\"birdex_id1\"));",
							"    pm.expect(res.propertyName).to.eq(\"Bird Drop\");",
							"    pm.expect(res.equipment).to.eq(\"Ladder\");",
							"    pm.expect(res.status).to.eq(\"Open\");",
							"    pm.expect(res.boomLiftHeight).to.be.null;",
							"    pm.expect(res.dateModified).to.not.be.null;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"propertyName\": \"Bird Drop\",\n    \"status\": \"Open\",\n    \"equipment\": \"Ladder\",\n    \"boomLiftHeight\": null\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/bird-exclusion/{{birdex_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"bird-exclusion",
						"{{birdex_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update entity: bad input",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"propertyName\": 123,\n    \"technician\": \"Ryan Owens\",\n    \"madeContact\": true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/bird-exclusion/{{birdex_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"bird-exclusion",
						"{{birdex_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update entity: XML input",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"415 status code\", function () {",
							"    pm.response.to.have.status(415);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"propertyName\": \"The Good Place\",\n    \"technician\": \"Ryan Owens\",\n    \"madeContact\": true\n}",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/bird-exclusion/{{birdex_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"bird-exclusion",
						"{{birdex_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Entity",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"bird_id1\", pm.response.json().id);",
							"",
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.propertyName).to.eq(\"The Bird's Nest\");",
							"    pm.expect(res.numTraps).to.eq(6);",
							"    pm.expect(res.buildingNums.length).to.eq(2);",
							"    pm.expect(res.dateModified).to.eq(null);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"numTraps\": 6,\n    \"buildingNums\": [\"1022\", \"2060\"],\n    \"observations\": \"it's like an aviary over here\",\n    \"propertyName\": \"The Bird's Nest\",\n    \"address\": \"456 N. Smart St.\",\n    \"city\": \"Mesa\",\n    \"state\": \"AZ\",\n    \"zipCode\": \"85233\",\n    \"technician\": \"B. Destroyer\",\n    \"madeContact\": true,\n    \"contactName\": \"Ovie Whelmed\",\n    \"contactTitle\": \"manager\",\n    \"notes\": \"bird crap e'rywhere\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/bird-trapping",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"bird-trapping"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Entity XML input",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"415 status code\", function () {",
							"    pm.response.to.have.status(415);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"isRegular\": false,\n    \"isExtreme\": true,\n    \"photos\": [\"mockphoto@faker.com\"],\n    \"propertyName\": \"Buggy Hotel\",\n    \"address\": \"456 N. Smart St.\",\n    \"city\": \"Mesa\",\n    \"zipCode\": \"85233\",\n    \"technician\": \"B. Destroyer\",\n    \"madeContact\": true,\n    \"contactName\": \"Ovie Whelmed\",\n    \"contactTitle\": \"manager\",\n    \"notes\": \"infested yo\"\n}",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/bird-trapping",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"bird-trapping"
					]
				}
			},
			"response": []
		},
		{
			"name": "Missing Attributes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"propertyName\": \"The Bird's Nest\",\n    \"address\": \"123 W. Ash St. Gilbert, AZ 85233\",\n    \"technician\": \"Bobby Flay\",\n    \"madeContact\": null,\n    \"contactName\": \"Fly O. Wall\",\n    \"contactTitle\": \"Manager\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/bird-trapping",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"bird-trapping"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Entities",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/bird-trapping",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"bird-trapping"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Entity by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.id).to.eq(pm.environment.get(\"bird_id1\"));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/bird-trapping/{{bird_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"bird-trapping",
						"{{bird_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get invalid entity id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/bird-trapping/123",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"bird-trapping",
						"123"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update entity id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.id).to.eq(pm.environment.get(\"bird_id1\"));",
							"    pm.expect(res.propertyName).to.eq(\"Bird Drop\");",
							"    pm.expect(res.numTraps).to.eq(7);",
							"    pm.expect(res.buildingNums.length).to.eq(3);",
							"    pm.expect(res.status).to.eq(\"Open\");",
							"    pm.expect(res.city).to.eq(\"Mesa\");",
							"    pm.expect(res.dateModified).to.not.be.null;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"propertyName\": \"Bird Drop\",\n    \"numTraps\": 7,\n    \"buildingNums\": [\"1022\", \"2060\", \"1105\"],\n    \"status\": \"Open\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/bird-trapping/{{bird_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"bird-trapping",
						"{{bird_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update entity: bad input",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"propertyName\": 123,\n    \"technician\": \"Ryan Owens\",\n    \"madeContact\": true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/bird-trapping/{{bird_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"bird-trapping",
						"{{bird_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update entity: XML input",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"415 status code\", function () {",
							"    pm.response.to.have.status(415);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"propertyName\": \"The Good Place\",\n    \"technician\": \"Ryan Owens\",\n    \"madeContact\": true\n}",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/bird-trapping/{{bird_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"bird-trapping",
						"{{bird_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Entity",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"deweb_id1\", pm.response.json().id);",
							"",
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.propertyName).to.eq(\"Charlotte's Web\");",
							"    pm.expect(res.sprayHours).to.eq(5);",
							"    pm.expect(res.photos.length).to.be.above(0);",
							"    pm.expect(res.dateModified).to.eq(null);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"sprayHours\": 5,\n    \"photos\": [\"mockphoto@faker.com\"],\n    \"propertyName\": \"Charlotte's Web\",\n    \"address\": \"456 N. Smart St.\",\n    \"city\": \"Mesa\",\n    \"state\": \"AZ\",\n    \"zipCode\": \"85233\",\n    \"technician\": \"S. Destroyer\",\n    \"madeContact\": true,\n    \"contactName\": \"Ovie Whelmed\",\n    \"contactTitle\": \"manager\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/dewebbing",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"dewebbing"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Entity XML input",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"415 status code\", function () {",
							"    pm.response.to.have.status(415);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"isRegular\": false,\n    \"isExtreme\": true,\n    \"photos\": [\"mockphoto@faker.com\"],\n    \"propertyName\": \"Buggy Hotel\",\n    \"address\": \"456 N. Smart St.\",\n    \"city\": \"Mesa\",\n    \"zipCode\": \"85233\",\n    \"technician\": \"B. Destroyer\",\n    \"madeContact\": true,\n    \"contactName\": \"Ovie Whelmed\",\n    \"contactTitle\": \"manager\",\n    \"notes\": \"infested yo\"\n}",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/dewebbing",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"dewebbing"
					]
				}
			},
			"response": []
		},
		{
			"name": "Missing Attributes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"propertyName\": \"Charlotte's Web\",\n    \"address\": \"123 W. Ash St. Gilbert, AZ 85233\",\n    \"technician\": \"Bobby Flay\",\n    \"madeContact\": null,\n    \"contactName\": \"Fly O. Wall\",\n    \"contactTitle\": \"Manager\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/dewebbing",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"dewebbing"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Entities",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/dewebbing",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"dewebbing"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Entity by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.id).to.eq(pm.environment.get(\"deweb_id1\"));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/dewebbing/{{deweb_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"dewebbing",
						"{{deweb_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get invalid entity id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/dewebbing/123",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"dewebbing",
						"123"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update entity id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.id).to.eq(pm.environment.get(\"deweb_id1\"));",
							"    pm.expect(res.propertyName).to.eq(\"Spy D. Web\");",
							"    pm.expect(res.sprayHours).to.eq(4);",
							"    pm.expect(res.status).to.eq(\"Open\");",
							"    pm.expect(res.dateModified).to.not.be.null;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"propertyName\": \"Spy D. Web\",\n    \"sprayHours\": 4,\n    \"status\": \"Open\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/dewebbing/{{deweb_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"dewebbing",
						"{{deweb_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update entity: bad input",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"propertyName\": 123,\n    \"technician\": \"Ryan Owens\",\n    \"madeContact\": true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/dewebbing/{{deweb_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"dewebbing",
						"{{deweb_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update entity: XML input",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"415 status code\", function () {",
							"    pm.response.to.have.status(415);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"propertyName\": \"The Good Place\",\n    \"technician\": \"Ryan Owens\",\n    \"madeContact\": true\n}",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/dewebbing/{{deweb_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"dewebbing",
						"{{deweb_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Entity",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"extrodent_id1\", pm.response.json().id);",
							"",
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.propertyName).to.eq(\"The Rat's Nest\");",
							"    pm.expect(res.numStations).to.eq(6);",
							"    pm.expect(res.buildingNums.length).to.eq(2);",
							"    pm.expect(res.numPropertyBuildings).to.eq(875);",
							"    pm.expect(res.cutOut).to.eq(true);",
							"    pm.expect(res.dateModified).to.eq(null);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"numStations\": 6,\n    \"cutOut\": true,\n    \"numPropertyBuildings\": 875,\n    \"buildingNums\": [\"1022\", \"2060\"],\n    \"observations\": \"the mouse trap got me\",\n    \"propertyName\": \"The Rat's Nest\",\n    \"address\": \"456 N. Smart St.\",\n    \"city\": \"Mesa\",\n    \"state\": \"AZ\",\n    \"zipCode\": \"85233\",\n    \"technician\": \"B. Destroyer\",\n    \"madeContact\": true,\n    \"contactName\": \"Ovie Whelmed\",\n    \"contactTitle\": \"manager\",\n    \"notes\": \"rodent crap e'rywhere\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/exterior-rodent",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"exterior-rodent"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Entity XML input",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"415 status code\", function () {",
							"    pm.response.to.have.status(415);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"numStations\": 6,\n    \"cutOut\": true,\n    \"numPropertyBuildings\": 875,\n    \"buildingNums\": [\"1022\", \"2060\"],\n    \"observations\": \"the mouse trap got me\",\n    \"propertyName\": \"The Rat's Nest\",\n    \"address\": \"456 N. Smart St.\",\n    \"city\": \"Mesa\",\n    \"state\": \"AZ\",\n    \"zipCode\": \"85233\",\n    \"technician\": \"B. Destroyer\",\n    \"madeContact\": true,\n    \"contactName\": \"Ovie Whelmed\",\n    \"contactTitle\": \"manager\",\n    \"notes\": \"rodent crap e'rywhere\"\n}",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/exterior-rodent",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"exterior-rodent"
					]
				}
			},
			"response": []
		},
		{
			"name": "Missing Attributes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"propertyName\": \"The Bird's Nest\",\n    \"address\": \"123 W. Ash St. Gilbert, AZ 85233\",\n    \"technician\": \"Bobby Flay\",\n    \"madeContact\": null,\n    \"contactName\": \"Fly O. Wall\",\n    \"contactTitle\": \"Manager\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/exterior-rodent",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"exterior-rodent"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Entities",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/exterior-rodent",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"exterior-rodent"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Entity by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.id).to.eq(pm.environment.get(\"extrodent_id1\"));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/exterior-rodent/{{extrodent_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"exterior-rodent",
						"{{extrodent_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get invalid entity id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/exterior-rodent/123",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"exterior-rodent",
						"123"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update entity id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.id).to.eq(pm.environment.get(\"extrodent_id1\"));",
							"    pm.expect(res.numStations).to.eq(7);",
							"    pm.expect(res.buildingNums.length).to.eq(3);",
							"    pm.expect(res.status).to.eq(\"Open\");",
							"    pm.expect(res.cutOut).to.eq(false);",
							"    pm.expect(res.dateModified).to.not.be.null;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"numStations\": 7,\n    \"buildingNums\": [\"1022\", \"2060\", \"1105\"],\n    \"cutOut\": false,\n    \"status\": \"Open\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/exterior-rodent/{{extrodent_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"exterior-rodent",
						"{{extrodent_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update entity: bad input",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"propertyName\": 123,\n    \"technician\": \"Ryan Owens\",\n    \"madeContact\": true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/exterior-rodent/{{bird_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"exterior-rodent",
						"{{bird_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update entity: XML input",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"415 status code\", function () {",
							"    pm.response.to.have.status(415);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"propertyName\": \"The Good Place\",\n    \"technician\": \"Ryan Owens\",\n    \"madeContact\": true\n}",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/exterior-rodent/{{bird_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"exterior-rodent",
						"{{bird_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Entity",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"honey_id1\", pm.response.json().id);",
							"",
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.propertyName).to.eq(\"The Bee's Knees\");",
							"    pm.expect(res.boomLiftHeight).to.eq(55);",
							"    pm.expect(res.level).to.eq(\"Boom Lift\");",
							"    pm.expect(res.photos.length).to.be.above(0);",
							"    pm.expect(res.dateModified).to.eq(null);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"level\": \"Boom Lift\",\n    \"photos\": [\"mockphoto@faker.com\"],\n    \"location\": \"In a tree, next to apartment #2060\",\n    \"reason\": \"ladders scare me\",\n    \"boomLiftHeight\": 55,\n    \"propertyName\": \"The Bee's Knees\",\n    \"address\": \"456 N. Smart St.\",\n    \"city\": \"Mesa\",\n    \"state\": \"AZ\",\n    \"zipCode\": \"85233\",\n    \"technician\": \"B. Destroyer\",\n    \"madeContact\": true,\n    \"contactName\": \"Ovie Whelmed\",\n    \"contactTitle\": \"manager\",\n    \"notes\": \"stingers e'rywhere\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/honeycomb",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"honeycomb"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Entity XML input",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"415 status code\", function () {",
							"    pm.response.to.have.status(415);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"photos\": [\"mockphoto@faker.com\"],\n    \"propertyName\": \"The Bee's Knees\",\n    \"address\": \"456 N. Smart St.\",\n    \"city\": \"Mesa\",\n    \"zipCode\": \"85233\",\n    \"technician\": \"B. Destroyer\",\n    \"madeContact\": true,\n    \"contactName\": \"Ovie Whelmed\",\n    \"contactTitle\": \"manager\",\n    \"notes\": \"infested yo\"\n}",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/honeycomb",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"honeycomb"
					]
				}
			},
			"response": []
		},
		{
			"name": "Missing Attributes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"propertyName\": \"The Bee's Knees\",\n    \"address\": \"123 W. Ash St. Gilbert, AZ 85233\",\n    \"technician\": \"Honey Galore\",\n    \"madeContact\": null,\n    \"contactName\": \"Fly O. Wall\",\n    \"contactTitle\": \"Manager\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/honeycomb",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"honeycomb"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Entities",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/honeycomb",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"honeycomb"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Entity by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.id).to.eq(pm.environment.get(\"honey_id1\"));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/honeycomb/{{honey_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"honeycomb",
						"{{honey_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get invalid entity id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/honeycomb/123",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"honeycomb",
						"123"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update entity id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.id).to.eq(pm.environment.get(\"honey_id1\"));",
							"    pm.expect(res.level).to.eq(\"Below 32'\");",
							"    pm.expect(res.status).to.eq(\"Open\");",
							"    pm.expect(res.boomLiftHeight).to.be.null;",
							"    pm.expect(res.dateModified).to.not.be.null;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"level\": \"Below 32'\",\n    \"boomLiftHeight\": null,\n    \"status\": \"Open\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/honeycomb/{{honey_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"honeycomb",
						"{{honey_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update entity: bad input",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"propertyName\": 123,\n    \"technician\": \"Ryan Owens\",\n    \"madeContact\": true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/honeycomb/{{honey_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"honeycomb",
						"{{honey_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update entity: XML input",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"415 status code\", function () {",
							"    pm.response.to.have.status(415);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"propertyName\": \"The Good Place\",\n    \"technician\": \"Ryan Owens\",\n    \"madeContact\": true\n}",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/honeycomb/{{honey_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"honeycomb",
						"{{honey_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Entity",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"introdent_id1\", pm.response.json().id);",
							"",
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.propertyName).to.eq(\"The Rat's Nest\");",
							"    pm.expect(res.unitNums.length).to.eq(2);",
							"    pm.expect(res.cutOut).to.eq(true);",
							"    pm.expect(res.dateModified).to.eq(null);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"cutOut\": true,\n    \"unitNums\": [\"1022\", \"2060\"],\n    \"observations\": \"the mouse trap got me\",\n    \"propertyName\": \"The Rat's Nest\",\n    \"address\": \"456 N. Smart St.\",\n    \"city\": \"Mesa\",\n    \"state\": \"AZ\",\n    \"zipCode\": \"85233\",\n    \"technician\": \"B. Destroyer\",\n    \"madeContact\": true,\n    \"contactName\": \"Ovie Whelmed\",\n    \"contactTitle\": \"manager\",\n    \"notes\": \"rodent crap e'rywhere\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/interior-rodent",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"interior-rodent"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Entity XML input",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"415 status code\", function () {",
							"    pm.response.to.have.status(415);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"numStations\": 6,\n    \"cutOut\": true,\n    \"numPropertyBuildings\": 875,\n    \"buildingNums\": [\"1022\", \"2060\"],\n    \"observations\": \"the mouse trap got me\",\n    \"propertyName\": \"The Rat's Nest\",\n    \"address\": \"456 N. Smart St.\",\n    \"city\": \"Mesa\",\n    \"state\": \"AZ\",\n    \"zipCode\": \"85233\",\n    \"technician\": \"B. Destroyer\",\n    \"madeContact\": true,\n    \"contactName\": \"Ovie Whelmed\",\n    \"contactTitle\": \"manager\",\n    \"notes\": \"rodent crap e'rywhere\"\n}",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/interior-rodent",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"interior-rodent"
					]
				}
			},
			"response": []
		},
		{
			"name": "Missing Attributes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"propertyName\": \"The Bird's Nest\",\n    \"address\": \"123 W. Ash St. Gilbert, AZ 85233\",\n    \"technician\": \"Bobby Flay\",\n    \"madeContact\": null,\n    \"contactName\": \"Fly O. Wall\",\n    \"contactTitle\": \"Manager\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/interior-rodent",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"interior-rodent"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Entities",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/interior-rodent",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"interior-rodent"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Entity by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.id).to.eq(pm.environment.get(\"introdent_id1\"));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/interior-rodent/{{introdent_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"interior-rodent",
						"{{introdent_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get invalid entity id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/interior-rodent/123",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"interior-rodent",
						"123"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update entity id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.id).to.eq(pm.environment.get(\"introdent_id1\"));",
							"    pm.expect(res.unitNums.length).to.eq(3);",
							"    pm.expect(res.status).to.eq(\"Open\");",
							"    pm.expect(res.cutOut).to.eq(false);",
							"    pm.expect(res.dateModified).to.not.be.null;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"unitNums\": [\"1022\", \"2060\", \"1105\"],\n    \"cutOut\": false,\n    \"status\": \"Open\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/interior-rodent/{{introdent_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"interior-rodent",
						"{{introdent_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update entity: bad input",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"propertyName\": 123,\n    \"technician\": \"Ryan Owens\",\n    \"madeContact\": true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/interior-rodent/{{introdent_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"interior-rodent",
						"{{introdent_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update entity: XML input",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"415 status code\", function () {",
							"    pm.response.to.have.status(415);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"propertyName\": \"The Good Place\",\n    \"technician\": \"Ryan Owens\",\n    \"madeContact\": true\n}",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/interior-rodent/{{introdent_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"interior-rodent",
						"{{introdent_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Entity",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"mosq_id1\", pm.response.json().id);",
							"",
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.status).to.eq(\"New\");",
							"    pm.expect(res.propertyName).to.eq(\"The Net\");",
							"    pm.expect(res.state).to.eq(\"AZ\");",
							"    pm.expect(res.photos.length).to.be.above(0);",
							"    pm.expect(res.dateModified).to.eq(null);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"photos\": [\"mockphoto@faker.com\"],\n    \"propertyName\": \"The Net\",\n    \"address\": \"456 N. Smart St.\",\n    \"city\": \"Mesa\",\n    \"state\": \"AZ\",\n    \"zipCode\": \"85233\",\n    \"technician\": \"M. Destroyer\",\n    \"madeContact\": true,\n    \"contactName\": \"E. N. Cephalitis\",\n    \"contactTitle\": \"manager\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/mosquito",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"mosquito"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Entity XML input",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"415 status code\", function () {",
							"    pm.response.to.have.status(415);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"photos\": [\"mockphoto@faker.com\"],\n    \"propertyName\": \"The Net\",\n    \"address\": \"456 N. Smart St.\",\n    \"city\": \"Mesa\",\n    \"state\": \"AZ\",\n    \"zipCode\": \"85233\",\n    \"technician\": \"B. Destroyer\",\n    \"madeContact\": true,\n    \"contactName\": \"Ovie Whelmed\",\n    \"contactTitle\": \"manager\",\n    \"notes\": \"infested yo\"\n}",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/mosquito",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"mosquito"
					]
				}
			},
			"response": []
		},
		{
			"name": "Missing Attributes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"propertyName\": \"The Net\",\n    \"address\": \"123 W. Ash St. Gilbert, AZ 85233\",\n    \"technician\": \"E. N. Cephalitis\",\n    \"madeContact\": null,\n    \"contactName\": \"Fly O. Wall\",\n    \"contactTitle\": \"Manager\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/mosquito",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"mosquito"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Entities",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/mosquito",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"mosquito"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Entity by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.id).to.eq(pm.environment.get(\"mosq_id1\"));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/mosquito/{{mosq_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"mosquito",
						"{{mosq_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get invalid entity id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/mosquito/123",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"mosquito",
						"123"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update entity id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.id).to.eq(pm.environment.get(\"mosq_id1\"));",
							"    pm.expect(res.photos.length).to.be.above(0);",
							"    pm.expect(res.propertyName).to.eq(\"The Good Place\");",
							"    pm.expect(res.status).to.eq(\"Open\");",
							"    pm.expect(res.dateModified).to.not.be.null;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"propertyName\": \"The Good Place\",\n    \"notes\": \"Lotta bugs y'all\",\n    \"status\": \"Open\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/mosquito/{{mosq_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"mosquito",
						"{{mosq_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update entity: bad input",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"propertyName\": 123,\n    \"technician\": \"Ryan Owens\",\n    \"madeContact\": true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/mosquito/{{mosq_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"mosquito",
						"{{mosq_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update entity: XML input",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"415 status code\", function () {",
							"    pm.response.to.have.status(415);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"propertyName\": \"The Good Place\",\n    \"technician\": \"Ryan Owens\",\n    \"madeContact\": true\n}",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/mosquito/{{mosq_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"mosquito",
						"{{mosq_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Roach Assessment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"roach_id1\", pm.response.json().id);",
							"",
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.propertyName).to.eq(\"Roach Hotel\");",
							"    pm.expect(res.technician).to.eq(\"R. Destroyer\");",
							"    pm.expect(res.buildingNums.length).to.be.above(0);",
							"    pm.expect(res.unitNums.length).to.be.above(0);",
							"    pm.expect(res.dateModified).to.eq(null);",
							" ",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"propertyName\": \"Roach Hotel\",\n    \"address\": \"789 N. Smart St.\",\n    \"city\": \"Mesa\",\n    \"state\": \"AZ\",\n    \"zipCode\": \"85233\",\n    \"technician\": \"R. Destroyer\",\n    \"madeContact\": false,\n    \"buildingNums\": [\"5\", \"18\"],\n    \"unitNums\": [\"1200\", \"2060\"],\n    \"notes\": \"sugar water everywhere\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/roach-assessment",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"roach-assessment"
					]
				}
			},
			"response": []
		},
		{
			"name": "Missing Attributes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"propertyName\": \"Roach Hotel\",\n    \"address\": \"123 W. Ash St. Gilbert, AZ 85233\",\n    \"technician\": \"Bobby Flay\",\n    \"madeContact\": null,\n    \"numBuildings\": 50,\n    \"numUnits\": 200,\n    \"contactName\": \"Fly O. Wall\",\n    \"contactTitle\": \"Manager\",\n    \"notes\": \"lots of roaches\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/roach-assessment",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"roach-assessment"
					]
				}
			},
			"response": []
		},
		{
			"name": "All RoachAssessments",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/roach-assessment",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"roach-assessment"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get roach_id1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.id).to.eq(pm.environment.get(\"roach_id1\"));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/roach-assessment/{{roach_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"roach-assessment",
						"{{roach_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get invalid roach_id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/roach-assessment/123",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"roach-assessment",
						"123"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update roach_id1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.propertyName).to.eq(\"Roach Motel\");",
							"    pm.expect(res.technician).to.eq(\"Ryan Owens\");",
							"    pm.expect(res.dateModified).to.not.be.null;",
							"    pm.expect(res.status).to.eq(\"Open\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"propertyName\": \"Roach Motel\",\n    \"technician\": \"Ryan Owens\",\n    \"madeContact\": true,\n    \"numBuildings\": 51,\n    \"numUnits\": 201,\n    \"status\": \"Open\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/roach-assessment/{{roach_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"roach-assessment",
						"{{roach_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update roach_id1 Bad Input",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"technician\": \"Ryan Owens\",\n    \"madeContact\": true,\n    \"numBuilding\": 50,\n    \"numUnit\": 200,\n    \"buildingNums\": 5,\n    \"unitNums\": 1022\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/roach-assessment/{{roach_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"roach-assessment",
						"{{roach_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update entity: XML input",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"415 status code\", function () {",
							"    pm.response.to.have.status(415);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"propertyName\": \"The Good Place\",\n    \"technician\": \"Ryan Owens\",\n    \"madeContact\": true\n}",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/mosquito/{{mosq_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"mosquito",
						"{{mosq_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Entity",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"rodentex_id1\", pm.response.json().id);",
							"",
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.numPipes).to.eq(20);",
							"    pm.expect(res.numVents).to.eq(10);",
							"    pm.expect(res.numMeterBoxes).to.eq(5);",
							"    pm.expect(res.photos.length).to.be.above(0);",
							"    pm.expect(res.dateModified).to.eq(null);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"numPipes\": 20,\n    \"numVents\": 10,\n    \"numMeterBoxes\": 5,\n    \"numEntryPoints\": 7,\n    \"photos\": [\"mockphoto@faker.com\"],\n    \"propertyName\": \"The Rat's Nest\",\n    \"address\": \"456 N. Smart St.\",\n    \"city\": \"Mesa\",\n    \"state\": \"AZ\",\n    \"zipCode\": \"85233\",\n    \"technician\": \"R. Destroyer\",\n    \"madeContact\": true,\n    \"contactName\": \"Ovie Whelmed\",\n    \"contactTitle\": \"manager\",\n    \"notes\": \"rat dung e'rywhere\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/rodent-exclusion",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"rodent-exclusion"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Entity XML input",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"415 status code\", function () {",
							"    pm.response.to.have.status(415);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"photos\": [\"mockphoto@faker.com\"],\n    \"propertyName\": \"Buggy Hotel\",\n    \"address\": \"456 N. Smart St.\",\n    \"city\": \"Mesa\",\n    \"zipCode\": \"85233\",\n    \"technician\": \"B. Destroyer\",\n    \"madeContact\": true,\n    \"contactName\": \"Ovie Whelmed\",\n    \"contactTitle\": \"manager\",\n    \"notes\": \"infested yo\"\n}",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/rodent-exclusion",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"rodent-exclusion"
					]
				}
			},
			"response": []
		},
		{
			"name": "Missing Attributes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"propertyName\": \"The Rat's Nest\",\n    \"address\": \"123 W. Ash St. Gilbert, AZ 85233\",\n    \"technician\": \"Bobby Flay\",\n    \"madeContact\": null,\n    \"contactName\": \"Fly O. Wall\",\n    \"contactTitle\": \"Manager\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/rodent-exclusion",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"rodent-exclusion"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Entities",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/rodent-exclusion",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"rodent-exclusion"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Entity by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.id).to.eq(pm.environment.get(\"rodentex_id1\"));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/rodent-exclusion/{{rodentex_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"rodent-exclusion",
						"{{rodentex_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get invalid entity id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/rodent-exclusion/123",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"rodent-exclusion",
						"123"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update entity id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.id).to.eq(pm.environment.get(\"rodentex_id1\"));",
							"    pm.expect(res.propertyName).to.eq(\"The Rat's Nest\");",
							"    pm.expect(res.numPipes).to.eq(19);",
							"    pm.expect(res.numVents).to.eq(9);",
							"    pm.expect(res.numMeterBoxes).to.eq(4);",
							"    pm.expect(res.numEntryPoints).to.eq(6);",
							"    pm.expect(res.photos.length).to.be.above(0);",
							"    pm.expect(res.status).to.eq(\"Open\");",
							"    pm.expect(res.dateModified).to.not.be.null;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"numPipes\": 19,\n    \"numVents\": 9,\n    \"numMeterBoxes\": 4,\n    \"numEntryPoints\": 6,\n    \"status\": \"Open\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/rodent-exclusion/{{rodentex_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"rodent-exclusion",
						"{{rodentex_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update entity: bad input",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"propertyName\": 123,\n    \"technician\": \"Ryan Owens\",\n    \"madeContact\": true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/rodent-exclusion/{{rodentex_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"rodent-exclusion",
						"{{rodentex_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update entity: XML input",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"415 status code\", function () {",
							"    pm.response.to.have.status(415);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"propertyName\": \"The Good Place\",\n    \"technician\": \"Ryan Owens\",\n    \"madeContact\": true\n}",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/rodent-exclusion/{{rodentex_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"rodent-exclusion",
						"{{rodentex_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Entity",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"scorpion_id1\", pm.response.json().id);",
							"",
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.propertyName).to.eq(\"Stingers\");",
							"    pm.expect(res.photos.length).to.be.above(0);",
							"    pm.expect(res.buildingNums.length).to.eq(2);",
							"    pm.expect(res.dateModified).to.eq(null);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"buildingNums\": [\"5\", \"6\"],\n    \"photos\": [\"mockphoto@faker.com\"],\n    \"propertyName\": \"Stingers\",\n    \"address\": \"456 N. Smart St.\",\n    \"city\": \"Mesa\",\n    \"state\": \"AZ\",\n    \"zipCode\": \"85233\",\n    \"technician\": \"S. Destroyer\",\n    \"madeContact\": true,\n    \"contactName\": \"Ovie Whelmed\",\n    \"contactTitle\": \"manager\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/scorpion",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"scorpion"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Entity XML input",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"415 status code\", function () {",
							"    pm.response.to.have.status(415);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"buildingNums\": [\"5\", \"6\"],\n    \"photos\": [\"mockphoto@faker.com\"],\n    \"propertyName\": \"Stingers\",\n    \"address\": \"456 N. Smart St.\",\n    \"city\": \"Mesa\",\n    \"state\": \"AZ\",\n    \"zipCode\": \"85233\",\n    \"technician\": \"S. Destroyer\",\n    \"madeContact\": true,\n    \"contactName\": \"Ovie Whelmed\",\n    \"contactTitle\": \"manager\"\n}",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/scorpion",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"scorpion"
					]
				}
			},
			"response": []
		},
		{
			"name": "Missing Attributes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"propertyName\": \"Stingers\",\n    \"address\": \"123 W. Ash St. Gilbert, AZ 85233\",\n    \"technician\": \"Bobby Flay\",\n    \"madeContact\": null,\n    \"contactName\": \"Fly O. Wall\",\n    \"contactTitle\": \"Manager\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/scorpion",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"scorpion"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Entities",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/scorpion",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"scorpion"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Entity by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.id).to.eq(pm.environment.get(\"scorpion_id1\"));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/scorpion/{{scorpion_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"scorpion",
						"{{scorpion_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get invalid entity id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/scorpion/123",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"scorpion",
						"123"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update entity id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.id).to.eq(pm.environment.get(\"scorpion_id1\"));",
							"    pm.expect(res.propertyName).to.eq(\"Stingers\");",
							"    pm.expect(res.photos.length).to.be.above(0);",
							"    pm.expect(res.buildingNums.length).to.eq(3);",
							"    pm.expect(res.status).to.eq(\"Open\");",
							"    pm.expect(res.dateModified).to.not.be.null;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"status\": \"Open\",\n    \"buildingNums\": [\"5\", \"6\", \"8\"],\n    \"propertyPercentage\": 100\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/scorpion/{{scorpion_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"scorpion",
						"{{scorpion_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update entity: bad input",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"buildingNums\": 123,\n    \"technician\": \"Ryan Owens\",\n    \"madeContact\": true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/scorpion/{{scorpion_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"scorpion",
						"{{scorpion_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update entity: XML input",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"415 status code\", function () {",
							"    pm.response.to.have.status(415);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"propertyName\": \"The Good Place\",\n    \"technician\": \"Ryan Owens\",\n    \"madeContact\": true\n}",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/scorpion/{{scorpion_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"scorpion",
						"{{scorpion_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Entity",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"snake_id1\", pm.response.json().id);",
							"",
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.propertyName).to.eq(\"The Net\");",
							"    pm.expect(res.state).to.eq(\"AZ\");",
							"    pm.expect(res.photos.length).to.be.above(0);",
							"    pm.expect(res.dateModified).to.eq(null);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"photos\": [\"mockphoto@faker.com\"],\n    \"propertyName\": \"The Net\",\n    \"address\": \"456 N. Smart St.\",\n    \"city\": \"Mesa\",\n    \"state\": \"AZ\",\n    \"zipCode\": \"85233\",\n    \"technician\": \"S. Destroyer\",\n    \"madeContact\": true,\n    \"contactName\": \"Slytherin\",\n    \"contactTitle\": \"manager\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/snake",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"snake"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Entity XML input",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"415 status code\", function () {",
							"    pm.response.to.have.status(415);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"photos\": [\"mockphoto@faker.com\"],\n    \"propertyName\": \"The Net\",\n    \"address\": \"456 N. Smart St.\",\n    \"city\": \"Mesa\",\n    \"state\": \"AZ\",\n    \"zipCode\": \"85233\",\n    \"technician\": \"B. Destroyer\",\n    \"madeContact\": true,\n    \"contactName\": \"Ovie Whelmed\",\n    \"contactTitle\": \"manager\",\n    \"notes\": \"infested yo\"\n}",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/snake",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"snake"
					]
				}
			},
			"response": []
		},
		{
			"name": "Missing Attributes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"propertyName\": \"The Net\",\n    \"address\": \"123 W. Ash St. Gilbert, AZ 85233\",\n    \"technician\": \"Slytherin\",\n    \"madeContact\": null,\n    \"contactName\": \"Fly O. Wall\",\n    \"contactTitle\": \"Manager\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/snake",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"snake"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Entities",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/snake",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"snake"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Entity by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.id).to.eq(pm.environment.get(\"snake_id1\"));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/snake/{{snake_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"snake",
						"{{snake_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get invalid entity id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/snake/123",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"snake",
						"123"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update entity id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.id).to.eq(pm.environment.get(\"snake_id1\"));",
							"    pm.expect(res.photos.length).to.be.above(0);",
							"    pm.expect(res.propertyName).to.eq(\"The Good Place\");",
							"    pm.expect(res.status).to.eq(\"Open\");",
							"    pm.expect(res.dateModified).to.not.be.null;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"propertyName\": \"The Good Place\",\n    \"notes\": \"Lotta snakes y'all\",\n    \"status\": \"Open\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/snake/{{snake_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"snake",
						"{{snake_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update entity: bad input",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"propertyName\": 123,\n    \"technician\": \"Ryan Owens\",\n    \"madeContact\": true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/snake/{{snake_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"snake",
						"{{snake_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update entity: XML input",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"415 status code\", function () {",
							"    pm.response.to.have.status(415);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"propertyName\": \"The Good Place\",\n    \"technician\": \"Ryan Owens\",\n    \"madeContact\": true\n}",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/snake/{{snake_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"snake",
						"{{snake_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Entity",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"termite_id1\", pm.response.json().id);",
							"",
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.numTubes).to.eq(20);",
							"    pm.expect(res.tubeDistance).to.eq(10);",
							"    pm.expect(res.drillingDistance).to.eq(5);",
							"    pm.expect(res.trenchingDistance).to.eq(7);",
							"    pm.expect(res.isDrywood).to.eq(true);",
							"    pm.expect(res.photos.length).to.be.above(0);",
							"    pm.expect(res.dateModified).to.eq(null);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"photos\": [\"mockphoto@faker.com\"],\n    \"buildingNums\": [\"5\", \"6\"],\n    \"numTubes\": 20,\n    \"tubeDistance\": 10,\n    \"drillingDistance\": 5,\n    \"trenchingDistance\": 7,\n    \"isDrywood\": true,\n    \"propertyName\": \"The Good Place\",\n    \"address\": \"456 N. Smart St.\",\n    \"city\": \"Mesa\",\n    \"state\": \"AZ\",\n    \"zipCode\": \"85233\",\n    \"technician\": \"T. Destroyer\",\n    \"madeContact\": true,\n    \"contactName\": \"Ovie Whelmed\",\n    \"contactTitle\": \"manager\",\n    \"notes\": \"wood shavin's e'rywhere\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/termite",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"termite"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Entity XML input",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"415 status code\", function () {",
							"    pm.response.to.have.status(415);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"photos\": [\"mockphoto@faker.com\"],\n    \"buildingNums\": [\"5\", \"6\"],\n    \"numTubes\": 20,\n    \"tubeDistance\": 10,\n    \"drillingDistance\": 5,\n    \"trenchingDistance\": 7,\n    \"isDrywood\": true,\n    \"propertyName\": \"The Good Place\",\n    \"address\": \"456 N. Smart St.\",\n    \"city\": \"Mesa\",\n    \"state\": \"AZ\",\n    \"zipCode\": \"85233\",\n    \"technician\": \"T. Destroyer\",\n    \"madeContact\": true,\n    \"contactName\": \"Ovie Whelmed\",\n    \"contactTitle\": \"manager\",\n    \"notes\": \"wood shavin's e'rywhere\"\n}",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/termite",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"termite"
					]
				}
			},
			"response": []
		},
		{
			"name": "Missing Attributes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"propertyName\": \"The Good Place\",\n    \"address\": \"123 W. Ash St. Gilbert, AZ 85233\",\n    \"technician\": \"Bobby Flay\",\n    \"madeContact\": null,\n    \"contactName\": \"Fly O. Wall\",\n    \"contactTitle\": \"Manager\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/termite",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"termite"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Entities",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/termite",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"termite"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Entity by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.id).to.eq(pm.environment.get(\"termite_id1\"));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/termite/{{termite_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"termite",
						"{{termite_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get invalid entity id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/termite/123",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"termite",
						"123"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update entity id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.id).to.eq(pm.environment.get(\"termite_id1\"));",
							"    pm.expect(res.propertyName).to.eq(\"The Good Place\");",
							"    pm.expect(res.numTubes).to.eq(21);",
							"    pm.expect(res.tubeDistance).to.eq(11);",
							"    pm.expect(res.drillingDistance).to.eq(6);",
							"    pm.expect(res.trenchingDistance).to.eq(8);",
							"    pm.expect(res.isDrywood).to.eq(false);",
							"    pm.expect(res.photos.length).to.be.above(0);",
							"    pm.expect(res.status).to.eq(\"Open\");",
							"    pm.expect(res.dateModified).to.not.be.null;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"buildingNums\": [\"5\", \"6\", \"8\"],\n    \"numTubes\": 21,\n    \"tubeDistance\": 11,\n    \"drillingDistance\": 6,\n    \"trenchingDistance\": 8,\n    \"isDrywood\": false,\n    \"status\": \"Open\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/termite/{{termite_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"termite",
						"{{termite_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update entity: bad input",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"propertyName\": 123,\n    \"technician\": \"Ryan Owens\",\n    \"madeContact\": true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/termite/{{termite_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"termite",
						"{{termite_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update entity: XML input",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"415 status code\", function () {",
							"    pm.response.to.have.status(415);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"propertyName\": \"The Good Place\",\n    \"technician\": \"Ryan Owens\",\n    \"madeContact\": true\n}",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/termite/{{termite_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"termite",
						"{{termite_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Invalid resource URL",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"404 status code\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/roach",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"roach"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Leads in DS",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/leads",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"leads"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All New Leads",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/leads/new",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"leads",
						"new"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Open Leads",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/leads/open",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"leads",
						"open"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Won Leads",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/leads/won",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"leads",
						"won"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Lost Leads",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/leads/lost",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"leads",
						"lost"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Sent Leads",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/leads/sent",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"leads",
						"sent"
					]
				}
			},
			"response": []
		}
	]
}