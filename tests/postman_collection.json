{
	"info": {
		"_postman_id": "0ce978de-6c0f-4a92-ba8d-5a504308eab7",
		"name": "All",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Missing Attributes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"photos\": [\"mockphoto@faker.com\"],\n    \"propertyName\": \"Buggy Hotel\",\n    \"address\": \"456 n. Smart St.\",\n    \"city\": \"Mesa\",\n    \"zipCode\": \"85233\",\n    \"technician\": \"B. Destroyer\",\n    \"madeContact\": true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/lead",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"lead"
					]
				}
			},
			"response": []
		},
		{
			"name": "XML input",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"415 status code\", function () {",
							"    pm.response.to.have.status(415);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"isRegular\": false,\n    \"isExtreme\": true,\n    \"photos\": [\"mockphoto@faker.com\"],\n    \"propertyName\": \"Buggy Hotel\",\n    \"address\": \"456 N. Smart St.\",\n    \"city\": \"Mesa\",\n    \"zipCode\": \"85233\",\n    \"technician\": \"B. Destroyer\",\n    \"madeContact\": true,\n    \"contactName\": \"Ovie Whelmed\",\n    \"contactTitle\": \"manager\",\n    \"notes\": \"infested yo\"\n}",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/lead",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"lead"
					]
				}
			},
			"response": []
		},
		{
			"name": "Invalid resource URL",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"404 status code\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/roach-assessment",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"roach-assessment"
					]
				}
			},
			"response": []
		},
		{
			"name": "Invalid Entity ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/lead/123",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"lead",
						"123"
					]
				}
			},
			"response": []
		},
		{
			"name": "Invalid Entity ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"status\": \"Open\",\n    \"propertyName\": \"Bugatropolis Motel\",\n    \"inspectionType\": \"Visual\",\n    \"reason\": null\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/lead/123",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"lead",
						"123"
					]
				}
			},
			"response": []
		},
		{
			"name": "Bed Bug Inspection Entity",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"bbinspect_id1\", pm.response.json().id);",
							"",
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.service).to.eq(\"bed bug inspection\");",
							"    pm.expect(res.targetPest).to.eq(\"bed bug\");",
							"    pm.expect(res.propertyName).to.eq(\"buggy hotel\");",
							"    pm.expect(res.inspectionType).to.eq(\"k9\");",
							"    pm.expect(res.reason).to.eq(\"health and safety\");",
							"    // const self_url = pm.environment.get(\"app_url\") + \"/slips/\" + pm.response.json()[\"id\"];",
							"    // pm.expect(pm.response.json()[\"self\"]).to.eq(self_url);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"inspectionType\": \"K9\",\n    \"reason\": \"Health and safety\",\n    \"service\": \"Bed bug Inspection\",\n    \"targetPest\": \"Bed bug\", \n    \"propertyName\": \"Buggy Hotel\",\n    \"address\": \"456 N. Smart St.\",\n    \"city\": \"Mesa\",\n    \"state\": \"AZ\",\n    \"zipCode\": \"85233\",\n    \"technician\": \"B. Destroyer\",\n    \"madeContact\": true,\n    \"contactName\": \"Ovie Whelmed\",\n    \"contactTitle\": \"manager\",\n    \"notes\": \"infested yo\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/lead",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"lead"
					]
				}
			},
			"response": []
		},
		{
			"name": "Bed Bug Inspection Entity by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.id).to.eq(pm.environment.get(\"bbinspect_id1\"));",
							"    pm.expect(res.service).to.eq(\"bed bug inspection\");",
							"    pm.expect(res.targetPest).to.eq(\"bed bug\");",
							"    pm.expect(res.propertyName).to.eq(\"buggy hotel\");",
							"    pm.expect(res.inspectionType).to.eq(\"k9\");",
							"    pm.expect(res.reason).to.eq(\"health and safety\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/lead/{{bbinspect_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"lead",
						"{{bbinspect_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Bed Bug Inspection Entity by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.id).to.eq(pm.environment.get(\"bbinspect_id1\"));",
							"    pm.expect(res.propertyName).to.eq(\"bugatropolis motel\");",
							"    pm.expect(res.status).to.eq(\"open\");",
							"    pm.expect(res.service).to.eq(\"bed bug inspection\");",
							"    pm.expect(res.targetPest).to.eq(\"bed bug\");",
							"    pm.expect(res.inspectionType).to.eq(\"visual\");",
							"    pm.expect(res.reason).to.eq(null);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"status\": \"Open\",\n    \"propertyName\": \"Bugatropolis Motel\",\n    \"inspectionType\": \"Visual\",\n    \"reason\": null\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/lead/{{bbinspect_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"lead",
						"{{bbinspect_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Invalid input",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"propertyName\": 123,\n    \"technician\": \"Ryan Owens\",\n    \"madeContact\": true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/lead/{{bbinspect_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"lead",
						"{{bbinspect_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "XML input",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"415 status code\", function () {",
							"    pm.response.to.have.status(415);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"propertyName\": \"The Good Place\",\n    \"technician\": \"Ryan Owens\",\n    \"madeContact\": true\n}",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/lead/{{bbinspect_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"lead",
						"{{bbinspect_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Bed Bug Treatment Entity",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"bbtreat_id1\", pm.response.json().id);",
							"",
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.propertyName).to.eq(\"buggy hotel\");",
							"    pm.expect(res.service).to.eq(\"bed bug treatment\");",
							"    pm.expect(res.targetPest).to.eq(\"bed bug\");",
							"    pm.expect(res.unitNums.length).to.eq(2);",
							"    pm.expect(res.observations).to.eq(\"it's pandelerium!\");",
							"    pm.expect(res.photos.length).to.be.above(0);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"unitNums\": [\"123A\", \"1022\"],\n    \"observations\": \"It's pandelerium!\",\n    \"photos\": [\"mockphoto@faker.com\"],\n    \"propertyName\": \"Buggy Hotel\",\n    \"service\": \"Bed bug Treatment\",\n    \"targetPest\": \"Bed bug\",\n    \"address\": \"456 N. Smart St.\",\n    \"city\": \"Mesa\",\n    \"state\": \"AZ\",\n    \"zipCode\": \"85233\",\n    \"technician\": \"B. Destroyer\",\n    \"madeContact\": true,\n    \"contactName\": \"Ovie Whelmed\",\n    \"contactTitle\": \"manager\",\n    \"notes\": \"infested yo\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/lead",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"lead"
					]
				}
			},
			"response": []
		},
		{
			"name": "Bed Bug Treatment Entity by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.id).to.eq(pm.environment.get(\"bbtreat_id1\"));",
							"    pm.expect(res.propertyName).to.eq(\"buggy hotel\");",
							"    pm.expect(res.service).to.eq(\"bed bug treatment\");",
							"    pm.expect(res.targetPest).to.eq(\"bed bug\");",
							"    pm.expect(res.observations).to.eq(\"it's pandelerium!\");",
							"    pm.expect(res.photos.length).to.be.above(0);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/lead/{{bbtreat_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"lead",
						"{{bbtreat_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Bed Bug Treatment Entity by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.id).to.eq(pm.environment.get(\"bbtreat_id1\"));",
							"    pm.expect(res.propertyName).to.eq(\"bugatopia motel\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"propertyName\": \"Bugatopia Motel\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/lead/{{bbtreat_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"lead",
						"{{bbtreat_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Extreme Bed Bug",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"extremebb_id1\", pm.response.json().id);",
							"",
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.propertyName).to.eq(\"buggy hotel\");",
							"    pm.expect(res.service).to.eq(\"extreme bed bug\");",
							"    pm.expect(res.targetPest).to.eq(\"bed bug\");",
							"    pm.expect(res.unitNums.length).to.eq(2);",
							"    pm.expect(res.observations).to.eq(\"it's pandelerium!\");",
							"    pm.expect(res.reason).to.eq(\"move out\");",
							"    pm.expect(res.photos.length).to.be.above(0);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"unitNums\": [\"123A\", \"1022\"],\n    \"observations\": \"It's pandelerium!\",\n    \"reason\": \"Move out\",\n    \"photos\": [\"mockphoto@faker.com\"],\n    \"propertyName\": \"Buggy Hotel\",\n    \"service\": \"Extreme Bed bug\",\n    \"targetPest\": \"Bed bug\",\n    \"address\": \"456 N. Smart St.\",\n    \"city\": \"Mesa\",\n    \"state\": \"AZ\",\n    \"zipCode\": \"85233\",\n    \"technician\": \"B. Destroyer\",\n    \"madeContact\": true,\n    \"contactName\": \"Ovie Whelmed\",\n    \"contactTitle\": \"manager\",\n    \"notes\": \"infested yo\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/lead",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"lead"
					]
				}
			},
			"response": []
		},
		{
			"name": "Extreme Bed Bug Entity by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.id).to.eq(pm.environment.get(\"extremebb_id1\"));",
							"    pm.expect(res.propertyName).to.eq(\"buggy hotel\");",
							"    pm.expect(res.service).to.eq(\"extreme bed bug\");",
							"    pm.expect(res.targetPest).to.eq(\"bed bug\");",
							"    pm.expect(res.unitNums.length).to.eq(2);",
							"    pm.expect(res.observations).to.eq(\"it's pandelerium!\");",
							"    pm.expect(res.reason).to.eq(\"move out\");",
							"    pm.expect(res.photos.length).to.be.above(0);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/lead/{{extremebb_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"lead",
						"{{extremebb_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Extreme Bed Bug Entity by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"extremebb_id1\", pm.response.json().id);",
							"",
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.propertyName).to.eq(\"buggy hotel\");",
							"    pm.expect(res.service).to.eq(\"extreme bed bug\");",
							"    pm.expect(res.targetPest).to.eq(\"bed bug\");",
							"    pm.expect(res.unitNums.length).to.eq(3);",
							"    pm.expect(res.observations).to.eq(\"it's pandelerium!\");",
							"    pm.expect(res.reason).to.eq(\"cluttered\");",
							"    pm.expect(res.photos.length).to.be.above(0);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"unitNums\": [\"123B\", \"1022\", \"1115\"],\n    \"reason\": \"Cluttered\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/lead/{{extremebb_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"lead",
						"{{extremebb_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Bird Exclusion Entity",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"birdex_id1\", pm.response.json().id);",
							"",
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.propertyName).to.eq(\"the bird's nest\");",
							"    pm.expect(res.equipment).to.eq(\"boom lift\");",
							"    pm.expect(res.boomLiftHeight).to.eq(100);",
							"    pm.expect(res.photos.length).to.be.above(0);",
							"    pm.expect(res.service).to.eq(\"bird exclusion\");",
							"    pm.expect(res.targetPest).to.eq(\"bird\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"equipment\": \"Boom Lift\",\n    \"spikeLength\": 5,\n    \"nettingLength\": 130,\n    \"nettingWidth\": 8,\n    \"tensionLineLength\": 12,\n    \"boomLiftHeight\": 100,\n    \"photos\": [\"mockphoto@faker.com\"],\n    \"service\": \"Bird Exclusion\",\n    \"targetPest\": \"Bird\", \n    \"propertyName\": \"The Bird's Nest\",\n    \"address\": \"456 N. Smart St.\",\n    \"city\": \"Mesa\",\n    \"state\": \"AZ\",\n    \"zipCode\": \"85233\",\n    \"technician\": \"B. Destroyer\",\n    \"madeContact\": true,\n    \"contactName\": \"Ovie Whelmed\",\n    \"contactTitle\": \"manager\",\n    \"notes\": \"bird crap e'rywhere\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/lead",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"lead"
					]
				}
			},
			"response": []
		},
		{
			"name": "Bird Exclusion Entity by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.id).to.eq(pm.environment.get(\"birdex_id1\"));",
							"    pm.expect(res.propertyName).to.eq(\"the bird's nest\");",
							"    pm.expect(res.equipment).to.eq(\"boom lift\");",
							"    pm.expect(res.boomLiftHeight).to.eq(100);",
							"    pm.expect(res.photos.length).to.be.above(0);",
							"    pm.expect(res.service).to.eq(\"bird exclusion\");",
							"    pm.expect(res.targetPest).to.eq(\"bird\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/lead/{{birdex_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"lead",
						"{{birdex_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Bird Exclusion Entity by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.id).to.eq(pm.environment.get(\"birdex_id1\"));",
							"    pm.expect(res.service).to.eq(\"bird exclusion\");",
							"    pm.expect(res.targetPest).to.eq(\"bird\");",
							"    pm.expect(res.propertyName).to.eq(\"bird drop\");",
							"    pm.expect(res.equipment).to.eq(\"ladder\");",
							"    pm.expect(res.status).to.eq(\"open\");",
							"    pm.expect(res.boomLiftHeight).to.be.null;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"propertyName\": \"Bird Drop\",\n    \"status\": \"Open\",\n    \"equipment\": \"Ladder\",\n    \"boomLiftHeight\": null\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/lead/{{birdex_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"lead",
						"{{birdex_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Bird Trapping Entity",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"bird_id1\", pm.response.json().id);",
							"",
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.propertyName).to.eq(\"the bird's nest\");",
							"    pm.expect(res.numTraps).to.eq(6);",
							"    pm.expect(res.buildingNums.length).to.eq(2);",
							"    pm.expect(res.service).to.eq(\"bird trapping\");",
							"    pm.expect(res.targetPest).to.eq(\"bird\");",
							"    pm.expect(res.excessHeight).to.eq(false);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"numTraps\": 6,\n    \"buildingNums\": [\"1022\", \"2060\"],\n    \"observations\": \"it's like an aviary over here\",\n    \"excessHeight\": false,\n    \"service\": \"Bird Trapping\",\n    \"targetPest\": \"Bird\",\n    \"propertyName\": \"The Bird's Nest\",\n    \"address\": \"456 N. Smart St.\",\n    \"city\": \"Mesa\",\n    \"state\": \"AZ\",\n    \"zipCode\": \"85233\",\n    \"technician\": \"B. Destroyer\",\n    \"madeContact\": true,\n    \"contactName\": \"Ovie Whelmed\",\n    \"contactTitle\": \"manager\",\n    \"notes\": \"bird crap e'rywhere\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/lead",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"lead"
					]
				}
			},
			"response": []
		},
		{
			"name": "Bird Trapping Entity by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.id).to.eq(pm.environment.get(\"bird_id1\"));",
							"    pm.expect(res.propertyName).to.eq(\"the bird's nest\");",
							"    pm.expect(res.numTraps).to.eq(6);",
							"    pm.expect(res.buildingNums.length).to.eq(2);",
							"    pm.expect(res.service).to.eq(\"bird trapping\");",
							"    pm.expect(res.targetPest).to.eq(\"bird\");",
							"    pm.expect(res.excessHeight).to.eq(false);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/lead/{{bird_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"lead",
						"{{bird_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Bird Trapping Entity by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.id).to.eq(pm.environment.get(\"bird_id1\"));",
							"    pm.expect(res.propertyName).to.eq(\"bird drop\");",
							"    pm.expect(res.numTraps).to.eq(7);",
							"    pm.expect(res.buildingNums.length).to.eq(3);",
							"    pm.expect(res.status).to.eq(\"new\");",
							"    pm.expect(res.city).to.eq(\"mesa\");",
							"    pm.expect(res.service).to.eq(\"bird trapping\");",
							"    pm.expect(res.targetPest).to.eq(\"bird\");",
							"    pm.expect(res.excessHeight).to.eq(true);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"propertyName\": \"Bird Drop\",\n    \"numTraps\": 7,\n    \"buildingNums\": [\"1022\", \"2060\", \"1105\"],\n    \"status\": \"New\",\n    \"excessHeight\": true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/lead/{{bird_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"lead",
						"{{bird_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Dewebbing Entity",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"deweb_id1\", pm.response.json().id);",
							"",
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.propertyName).to.eq(\"charlotte's web\");",
							"    pm.expect(res.buildingNums.length).to.eq(2);",
							"    pm.expect(res.sprayHours).to.eq(5);",
							"    pm.expect(res.photos.length).to.be.above(0);",
							"    pm.expect(res.service).to.eq(\"dewebbing\");",
							"    pm.expect(res.targetPest).to.eq(\"spider\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"buildingNums\": [\"12A\", \"15\"],\n    \"sprayHours\": 5,\n    \"photos\": [\"mockphoto@faker.com\"],\n    \"service\": \"Dewebbing\",\n    \"targetPest\": \"Spider\",\n    \"propertyName\": \"Charlotte's Web\",\n    \"address\": \"456 N. Smart St.\",\n    \"city\": \"Mesa\",\n    \"state\": \"AZ\",\n    \"zipCode\": \"85233\",\n    \"technician\": \"S. Destroyer\",\n    \"madeContact\": true,\n    \"contactName\": \"Ovie Whelmed\",\n    \"contactTitle\": \"manager\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/lead",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"lead"
					]
				}
			},
			"response": []
		},
		{
			"name": "Dewebbing Entity by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.id).to.eq(pm.environment.get(\"deweb_id1\"));",
							"    pm.expect(res.propertyName).to.eq(\"charlotte's web\");",
							"    pm.expect(res.buildingNums.length).to.eq(2);",
							"    pm.expect(res.sprayHours).to.eq(5);",
							"    pm.expect(res.photos.length).to.be.above(0);",
							"    pm.expect(res.service).to.eq(\"dewebbing\");",
							"    pm.expect(res.targetPest).to.eq(\"spider\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/lead/{{deweb_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"lead",
						"{{deweb_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Dewebbing Entity by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.id).to.eq(pm.environment.get(\"deweb_id1\"));",
							"    pm.expect(res.propertyName).to.eq(\"spy d. web\");",
							"    pm.expect(res.sprayHours).to.eq(4);",
							"    pm.expect(res.photos.length).to.be.above(0);",
							"    pm.expect(res.status).to.eq(\"closed\");",
							"    pm.expect(res.service).to.eq(\"dewebbing\");",
							"    pm.expect(res.targetPest).to.eq(\"spider\");",
							"    pm.expect(res.buildingNums.length).to.eq(3);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"propertyName\": \"Spy D. Web\",\n    \"sprayHours\": 4,\n    \"status\": \"Closed\",\n    \"buildingNums\": [\"23\", \"18B\", \"5\"]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/lead/{{deweb_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"lead",
						"{{deweb_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Exterior Rodent Entity",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"extrodent_id1\", pm.response.json().id);",
							"",
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.propertyName).to.eq(\"the rat's nest\");",
							"    pm.expect(res.numStations).to.eq(6);",
							"    pm.expect(res.buildingNums.length).to.eq(2);",
							"    pm.expect(res.numPropertyBuildings).to.eq(875);",
							"    pm.expect(res.observations).to.eq(\"lotta rodents\");",
							"    pm.expect(res.service).to.eq(\"exterior rodent\");",
							"    pm.expect(res.targetPest).to.eq(\"rodent\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"numStations\": 6,\n    \"observations\": \"lotta rodents\",\n    \"numPropertyBuildings\": 875,\n    \"buildingNums\": [\"1022\", \"2060\"],\n    \"service\": \"Exterior Rodent\",\n    \"targetPest\": \"Rodent\",\n    \"propertyName\": \"The Rat's Nest\",\n    \"address\": \"456 N. Smart St.\",\n    \"city\": \"Mesa\",\n    \"state\": \"AZ\",\n    \"zipCode\": \"85233\",\n    \"technician\": \"B. Destroyer\",\n    \"madeContact\": true,\n    \"contactName\": \"Ovie Whelmed\",\n    \"contactTitle\": \"manager\",\n    \"notes\": \"rodent crap e'rywhere\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/lead",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"lead"
					]
				}
			},
			"response": []
		},
		{
			"name": "Exterior Rodent Entity by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.id).to.eq(pm.environment.get(\"extrodent_id1\"));",
							"    pm.expect(res.propertyName).to.eq(\"the rat's nest\");",
							"    pm.expect(res.numStations).to.eq(6);",
							"    pm.expect(res.buildingNums.length).to.eq(2);",
							"    pm.expect(res.numPropertyBuildings).to.eq(875);",
							"    pm.expect(res.observations).to.eq(\"lotta rodents\");",
							"    pm.expect(res.service).to.eq(\"exterior rodent\");",
							"    pm.expect(res.targetPest).to.eq(\"rodent\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/lead/{{extrodent_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"lead",
						"{{extrodent_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Exterior Rodent Entity by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.id).to.eq(pm.environment.get(\"extrodent_id1\"));",
							"    pm.expect(res.numStations).to.eq(7);",
							"    pm.expect(res.buildingNums.length).to.eq(3);",
							"    pm.expect(res.status).to.eq(\"open\");",
							"    pm.expect(res.service).to.eq(\"exterior rodent\");",
							"    pm.expect(res.targetPest).to.eq(\"rodent\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"numStations\": 7,\n    \"buildingNums\": [\"1022\", \"2060\", \"1105\"],\n    \"status\": \"Open\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/lead/{{extrodent_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"lead",
						"{{extrodent_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Interior Rodent Entity",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"introdent_id1\", pm.response.json().id);",
							"",
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.propertyName).to.eq(\"the rat's nest\");",
							"    pm.expect(res.unitNums.length).to.eq(2);",
							"    pm.expect(res.photos.length).to.eq(1);",
							"    pm.expect(res.cutOut).to.eq(true);",
							"    pm.expect(res.service).to.eq(\"interior rodent\");",
							"    pm.expect(res.targetPest).to.eq(\"rodent\");",
							"    pm.expect(res.status).to.eq(\"new\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"cutOut\": true,\n    \"unitNums\": [\"1022\", \"2060\"],\n    \"observations\": \"the mouse trap got me\",\n    \"photos\": [\"mockphoto@faker.com\"],\n    \"service\": \"Interior Rodent\",\n    \"targetPest\": \"Rodent\",\n    \"propertyName\": \"The Rat's Nest\",\n    \"address\": \"456 N. Smart St.\",\n    \"city\": \"Mesa\",\n    \"state\": \"AZ\",\n    \"zipCode\": \"85233\",\n    \"technician\": \"B. Destroyer\",\n    \"madeContact\": true,\n    \"contactName\": \"Ovie Whelmed\",\n    \"contactTitle\": \"manager\",\n    \"notes\": \"rodent crap e'rywhere\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/lead",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"lead"
					]
				}
			},
			"response": []
		},
		{
			"name": "Interior Rodent Entity by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.id).to.eq(pm.environment.get(\"introdent_id1\"));",
							"    pm.expect(res.propertyName).to.eq(\"the rat's nest\");",
							"    pm.expect(res.unitNums.length).to.eq(2);",
							"    pm.expect(res.photos.length).to.eq(1);",
							"    pm.expect(res.cutOut).to.eq(true);",
							"    pm.expect(res.service).to.eq(\"interior rodent\");",
							"    pm.expect(res.targetPest).to.eq(\"rodent\");",
							"    pm.expect(res.status).to.eq(\"new\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/lead/{{introdent_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"lead",
						"{{introdent_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Interior Rodent Entity by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.id).to.eq(pm.environment.get(\"introdent_id1\"));",
							"    pm.expect(res.unitNums.length).to.eq(3);",
							"    pm.expect(res.status).to.eq(\"open\");",
							"    pm.expect(res.cutOut).to.eq(false);",
							"    pm.expect(res.propertyName).to.eq(\"the rat's nest\");",
							"    pm.expect(res.service).to.eq(\"interior rodent\");",
							"    pm.expect(res.targetPest).to.eq(\"rodent\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"unitNums\": [\"1022\", \"2060\", \"1105\"],\n    \"cutOut\": false,\n    \"status\": \"Open\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/lead/{{introdent_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"lead",
						"{{introdent_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Rodent Exclusion Entity",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"rodentex_id1\", pm.response.json().id);",
							"",
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.numPipes).to.eq(20);",
							"    pm.expect(res.numVents).to.eq(10);",
							"    pm.expect(res.numMeterBoxes).to.eq(5);",
							"    pm.expect(res.photos.length).to.be.above(0);",
							"    pm.expect(res.service).to.eq(\"rodent exclusion\");",
							"    pm.expect(res.targetPest).to.eq(\"rodent\");",
							"    pm.expect(res.status).to.eq(\"new\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"numPipes\": 20,\n    \"numVents\": 10,\n    \"numMeterBoxes\": 5,\n    \"numEntryPoints\": 7,\n    \"photos\": [\"mockphoto@faker.com\"],\n    \"service\": \"Rodent Exclusion\",\n    \"targetPest\": \"Rodent\",\n    \"propertyName\": \"The Rat's Nest\",\n    \"address\": \"456 N. Smart St.\",\n    \"city\": \"Mesa\",\n    \"state\": \"AZ\",\n    \"zipCode\": \"85233\",\n    \"technician\": \"R. Destroyer\",\n    \"madeContact\": true,\n    \"contactName\": \"Ovie Whelmed\",\n    \"contactTitle\": \"manager\",\n    \"notes\": \"rat dung e'rywhere\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/lead",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"lead"
					]
				}
			},
			"response": []
		},
		{
			"name": "Rodent Exclusion Entity by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.id).to.eq(pm.environment.get(\"rodentex_id1\"));",
							"    pm.expect(res.numPipes).to.eq(20);",
							"    pm.expect(res.numVents).to.eq(10);",
							"    pm.expect(res.numMeterBoxes).to.eq(5);",
							"    pm.expect(res.photos.length).to.be.above(0);",
							"    pm.expect(res.service).to.eq(\"rodent exclusion\");",
							"    pm.expect(res.targetPest).to.eq(\"rodent\");",
							"    pm.expect(res.status).to.eq(\"new\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/lead/{{rodentex_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"lead",
						"{{rodentex_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Rodent Exclusion Entity by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.id).to.eq(pm.environment.get(\"rodentex_id1\"));",
							"    pm.expect(res.propertyName).to.eq(\"the rat's nest\");",
							"    pm.expect(res.numPipes).to.eq(19);",
							"    pm.expect(res.numVents).to.eq(9);",
							"    pm.expect(res.numMeterBoxes).to.eq(4);",
							"    pm.expect(res.numEntryPoints).to.eq(6);",
							"    pm.expect(res.photos.length).to.be.above(0);",
							"    pm.expect(res.status).to.eq(\"open\");",
							"    pm.expect(res.service).to.eq(\"rodent exclusion\");",
							"    pm.expect(res.targetPest).to.eq(\"rodent\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"numPipes\": 19,\n    \"numVents\": 9,\n    \"numMeterBoxes\": 4,\n    \"numEntryPoints\": 6,\n    \"status\": \"Open\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/lead/{{rodentex_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"lead",
						"{{rodentex_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Bee Hive Removal Entity",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// pm.environment.set(\"honey_id1\", pm.response.json().id);",
							"",
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.propertyName).to.eq(\"the bee's knees\");",
							"    pm.expect(res.excessHeight).to.eq(false);",
							"    pm.expect(res.level).to.eq(\"boom lift\");",
							"    pm.expect(res.location).to.eq(\"in a tree, next to apartment #2060\");",
							"    pm.expect(res.photos.length).to.be.above(0);",
							"    pm.expect(res.service).to.eq(\"bee hive removal\");",
							"    pm.expect(res.targetPest).to.eq(\"bee & wasp\");",
							"    pm.expect(res.status).to.eq(\"new\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"level\": \"Boom Lift\",\n    \"photos\": [\"mockphoto@faker.com\"],\n    \"location\": \"In a tree, next to apartment #2060\",\n    \"excessHeight\": false,\n    \"reason\": \"ladders scare me\",\n    \"boomLiftHeight\": 55,\n    \"service\": \"Bee Hive Removal\",\n    \"targetPest\": \"Bee & Wasp\",\n    \"propertyName\": \"The Bee's Knees\",\n    \"address\": \"456 N. Smart St.\",\n    \"city\": \"Mesa\",\n    \"state\": \"AZ\",\n    \"zipCode\": \"85233\",\n    \"technician\": \"B. Destroyer\",\n    \"madeContact\": true,\n    \"contactName\": \"Ovie Whelmed\",\n    \"contactTitle\": \"manager\",\n    \"notes\": \"stingers e'rywhere\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/lead",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"lead"
					]
				}
			},
			"response": []
		},
		{
			"name": "Honeycomb Entity",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"honey_id1\", pm.response.json().id);",
							"",
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.propertyName).to.eq(\"the bee's knees\");",
							"    pm.expect(res.excessHeight).to.eq(false);",
							"    pm.expect(res.level).to.eq(\"boom lift\");",
							"    pm.expect(res.location).to.eq(\"in a tree, next to apartment #2060\");",
							"    pm.expect(res.photos.length).to.be.above(0);",
							"    pm.expect(res.service).to.eq(\"honeycomb removal\");",
							"    pm.expect(res.targetPest).to.eq(\"bee & wasp\");",
							"    pm.expect(res.status).to.eq(\"new\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"level\": \"Boom Lift\",\n    \"photos\": [\"mockphoto@faker.com\"],\n    \"location\": \"In a tree, next to apartment #2060\",\n    \"reason\": \"ladders scare me\",\n    \"excessHeight\": false,\n    \"boomLiftHeight\": 55,\n    \"service\": \"Honeycomb Removal\",\n    \"targetPest\": \"Bee & Wasp\",\n    \"propertyName\": \"The Bee's Knees\",\n    \"address\": \"456 N. Smart St.\",\n    \"city\": \"Mesa\",\n    \"state\": \"AZ\",\n    \"zipCode\": \"85233\",\n    \"technician\": \"B. Destroyer\",\n    \"madeContact\": true,\n    \"contactName\": \"Ovie Whelmed\",\n    \"contactTitle\": \"manager\",\n    \"notes\": \"stingers e'rywhere\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/lead",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"lead"
					]
				}
			},
			"response": []
		},
		{
			"name": "Honeycomb Entity by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.id).to.eq(pm.environment.get(\"honey_id1\"));",
							"    pm.expect(res.propertyName).to.eq(\"the bee's knees\");",
							"    pm.expect(res.excessHeight).to.eq(false);",
							"    pm.expect(res.level).to.eq(\"boom lift\");",
							"    pm.expect(res.location).to.eq(\"in a tree, next to apartment #2060\");",
							"    pm.expect(res.photos.length).to.be.above(0);",
							"    pm.expect(res.service).to.eq(\"honeycomb removal\");",
							"    pm.expect(res.targetPest).to.eq(\"bee & wasp\");",
							"    pm.expect(res.status).to.eq(\"new\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/lead/{{honey_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"lead",
						"{{honey_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Honeycomb Entity by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.id).to.eq(pm.environment.get(\"honey_id1\"));",
							"    pm.expect(res.level).to.eq(\"below 32'\");",
							"    pm.expect(res.status).to.eq(\"sent\");",
							"    pm.expect(res.photos.length).to.be.above(0);",
							"    pm.expect(res.service).to.eq(\"honeycomb removal\");",
							"    pm.expect(res.targetPest).to.eq(\"bee & wasp\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"level\": \"Below 32'\",\n    \"excessHeight\": null,\n    \"status\": \"Sent\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/lead/{{honey_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"lead",
						"{{honey_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Mosquito Entity",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"mosq_id1\", pm.response.json().id);",
							"",
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.photos.length).to.be.above(0);",
							"    pm.expect(res.service).to.eq(\"mosquito\");",
							"    pm.expect(res.targetPest).to.eq(\"mosquito\");",
							"    pm.expect(res.status).to.eq(\"new\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"photos\": [\"mockphoto@faker.com\"],\n    \"service\": \"Mosquito\",\n    \"targetPest\": \"Mosquito\",\n    \"propertyName\": \"The Net\",\n    \"address\": \"456 N. Smart St.\",\n    \"city\": \"Mesa\",\n    \"state\": \"AZ\",\n    \"zipCode\": \"85233\",\n    \"technician\": \"M. Destroyer\",\n    \"madeContact\": true,\n    \"contactName\": \"E. N. Cephalitis\",\n    \"contactTitle\": \"manager\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/lead",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"lead"
					]
				}
			},
			"response": []
		},
		{
			"name": "Mosquito Entity by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.id).to.eq(pm.environment.get(\"mosq_id1\"));",
							"    pm.expect(res.status).to.eq(\"new\");",
							"    pm.expect(res.propertyName).to.eq(\"the net\");",
							"    pm.expect(res.state).to.eq(\"az\");",
							"    pm.expect(res.photos.length).to.be.above(0);",
							"    pm.expect(res.service).to.eq(\"mosquito\");",
							"    pm.expect(res.targetPest).to.eq(\"mosquito\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/lead/{{mosq_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"lead",
						"{{mosq_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Mosquito Entity by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.id).to.eq(pm.environment.get(\"mosq_id1\"));",
							"    pm.expect(res.photos.length).to.be.above(0);",
							"    pm.expect(res.propertyName).to.eq(\"the good place\");",
							"    pm.expect(res.status).to.eq(\"open\");",
							"    pm.expect(res.state).to.eq(\"az\");",
							"    pm.expect(res.service).to.eq(\"mosquito\");",
							"    pm.expect(res.targetPest).to.eq(\"mosquito\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"propertyName\": \"The Good Place\",\n    \"notes\": \"Lotta bugs y'all\",\n    \"status\": \"Open\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/lead/{{mosq_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"lead",
						"{{mosq_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Roach Assessment Entity",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"roach_id1\", pm.response.json().id);",
							"",
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.propertyName).to.eq(\"roach hotel\");",
							"    pm.expect(res.technician).to.eq(\"r. destroyer\");",
							"    pm.expect(res.unitNums.length).to.eq(2);",
							"    pm.expect(res.buildingNums.length).to.eq(2);",
							"    pm.expect(res.service).to.eq(\"roach assessment\");",
							"    pm.expect(res.targetPest).to.eq(\"roach\");",
							"    pm.expect(res.status).to.eq(\"new\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"service\": \"Roach Assessment\",\n    \"targetPest\": \"Roach\",\n    \"propertyName\": \"Roach Hotel\",\n    \"address\": \"789 N. Smart St.\",\n    \"city\": \"Mesa\",\n    \"state\": \"AZ\",\n    \"zipCode\": \"85233\",\n    \"technician\": \"R. Destroyer\",\n    \"madeContact\": false,\n    \"buildingNums\": [\"5\", \"18\"],\n    \"unitNums\": [\"1200\", \"2060\"],\n    \"notes\": \"sugar water everywhere\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/lead",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"lead"
					]
				}
			},
			"response": []
		},
		{
			"name": "Roach Assessment Entity by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.id).to.eq(pm.environment.get(\"roach_id1\"));",
							"    pm.expect(res.propertyName).to.eq(\"roach hotel\");",
							"    pm.expect(res.technician).to.eq(\"r. destroyer\");",
							"    pm.expect(res.unitNums.length).to.eq(2);",
							"    pm.expect(res.buildingNums.length).to.eq(2);",
							"    pm.expect(res.service).to.eq(\"roach assessment\");",
							"    pm.expect(res.targetPest).to.eq(\"roach\");",
							"    pm.expect(res.status).to.eq(\"new\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/lead/{{roach_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"lead",
						"{{roach_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Roach Assessment Entity by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.propertyName).to.eq(\"roach motel\");",
							"    pm.expect(res.service).to.eq(\"roach assessment\");",
							"    pm.expect(res.targetPest).to.eq(\"roach\");",
							"    pm.expect(res.status).to.eq(\"open\");",
							"    pm.expect(res.technician).to.eq(\"ryan owens\");",
							"    pm.expect(res.unitNums.length).to.eq(3);",
							"    pm.expect(res.buildingNums.length).to.eq(3);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"propertyName\": \"Roach Motel\",\n    \"technician\": \"Ryan Owens\",\n    \"madeContact\": true,\n    \"buildingNums\": [\"5\", \"8\", \"15\"],\n    \"unitNums\": [\"1200\", \"2060\", \"1100\"],\n    \"status\": \"Open\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/lead/{{roach_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"lead",
						"{{roach_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Roach Treatment Entity",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.propertyName).to.eq(\"roach hotel\");",
							"    pm.expect(res.technician).to.eq(\"r. destroyer\");",
							"    pm.expect(res.unitNums.length).to.eq(2);",
							"    pm.expect(res.service).to.eq(\"roach treatment\");",
							"    pm.expect(res.targetPest).to.eq(\"roach\");",
							"    pm.expect(res.status).to.eq(\"new\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"service\": \"Roach Treatment\",\n    \"targetPest\": \"Roach\",\n    \"propertyName\": \"Roach Hotel\",\n    \"address\": \"789 N. Smart St.\",\n    \"city\": \"Mesa\",\n    \"state\": \"AZ\",\n    \"zipCode\": \"85233\",\n    \"technician\": \"R. Destroyer\",\n    \"madeContact\": false,\n    \"observations\": \"sugar water everywhere\",\n    \"unitNums\": [\"1200\", \"2060\"],\n    \"photos\": [\n        \"mockphoto@faker.com\"\n    ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/lead",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"lead"
					]
				}
			},
			"response": []
		},
		{
			"name": "Extreme Roach Entity",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.propertyName).to.eq(\"roach hotel\");",
							"    pm.expect(res.technician).to.eq(\"r. destroyer\");",
							"    pm.expect(res.unitNums.length).to.eq(2);",
							"    pm.expect(res.service).to.eq(\"extreme roach\");",
							"    pm.expect(res.targetPest).to.eq(\"roach\");",
							"    pm.expect(res.status).to.eq(\"new\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"service\": \"Extreme Roach\",\n    \"targetPest\": \"Roach\",\n    \"propertyName\": \"Roach Hotel\",\n    \"address\": \"789 N. Smart St.\",\n    \"city\": \"Mesa\",\n    \"state\": \"AZ\",\n    \"zipCode\": \"85233\",\n    \"technician\": \"R. Destroyer\",\n    \"madeContact\": false,\n    \"observations\": \"sugar water everywhere\",\n    \"unitNums\": [\"1200\", \"2060\"],\n    \"photos\": [\n        \"mockphoto@faker.com\"\n    ],\n    \"reason\": \"cluttered\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/lead",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"lead"
					]
				}
			},
			"response": []
		},
		{
			"name": "Sewer Dusting Entity",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.propertyName).to.eq(\"roach hotel\");",
							"    pm.expect(res.technician).to.eq(\"r. destroyer\");",
							"    pm.expect(res.buildingNums.length).to.eq(2);",
							"    pm.expect(res.service).to.eq(\"sewer dusting\");",
							"    pm.expect(res.targetPest).to.eq(\"roach\");",
							"    pm.expect(res.status).to.eq(\"new\");",
							"    pm.expect(res.manholeNums).to.eq(3);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"service\": \"Sewer Dusting\",\n    \"targetPest\": \"Roach\",\n    \"propertyName\": \"Roach Hotel\",\n    \"address\": \"789 N. Smart St.\",\n    \"city\": \"Mesa\",\n    \"state\": \"AZ\",\n    \"zipCode\": \"85233\",\n    \"technician\": \"R. Destroyer\",\n    \"madeContact\": false,\n    \"observations\": \"sugar water everywhere\",\n    \"buildingNums\": [\"12\", \"20\"],\n    \"photos\": [\n        \"mockphoto@faker.com\"\n    ],\n    \"manholeNums\": 3\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/lead",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"lead"
					]
				}
			},
			"response": []
		},
		{
			"name": "Exterior Scorpion Entity",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"scorpion_id1\", pm.response.json().id);",
							"",
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.propertyName).to.eq(\"stingers\");",
							"    pm.expect(res.photos.length).to.be.above(0);",
							"    pm.expect(res.buildingNums.length).to.eq(2);",
							"    pm.expect(res.service).to.eq(\"exterior scorpion\");",
							"    pm.expect(res.targetPest).to.eq(\"scorpion\");",
							"    pm.expect(res.status).to.eq(\"new\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"buildingNums\": [\"5\", \"6\"],\n    \"photos\": [\"mockphoto@faker.com\"],\n    \"service\": \"Exterior Scorpion\",\n    \"targetPest\": \"Scorpion\",\n    \"propertyName\": \"Stingers\",\n    \"address\": \"456 N. Smart St.\",\n    \"city\": \"Mesa\",\n    \"state\": \"AZ\",\n    \"zipCode\": \"85233\",\n    \"technician\": \"S. Destroyer\",\n    \"madeContact\": true,\n    \"contactName\": \"Ovie Whelmed\",\n    \"contactTitle\": \"manager\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/lead",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"lead"
					]
				}
			},
			"response": []
		},
		{
			"name": "Exterior Scorpion Entity by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.id).to.eq(pm.environment.get(\"scorpion_id1\"));",
							"     pm.expect(res.propertyName).to.eq(\"stingers\");",
							"    pm.expect(res.photos.length).to.be.above(0);",
							"    pm.expect(res.buildingNums.length).to.eq(2);",
							"    pm.expect(res.service).to.eq(\"exterior scorpion\");",
							"    pm.expect(res.targetPest).to.eq(\"scorpion\");",
							"    pm.expect(res.status).to.eq(\"new\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/lead/{{scorpion_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"lead",
						"{{scorpion_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Exterior Scorpion Entity by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.id).to.eq(pm.environment.get(\"scorpion_id1\"));",
							"",
							"    pm.expect(res.propertyName).to.eq(\"stingers\");",
							"    pm.expect(res.photos.length).to.be.above(0);",
							"    pm.expect(res.buildingNums.length).to.eq(3);",
							"    pm.expect(res.service).to.eq(\"exterior scorpion\");",
							"    pm.expect(res.targetPest).to.eq(\"scorpion\");",
							"    pm.expect(res.status).to.eq(\"open\");",
							" ",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"status\": \"Open\",\n    \"buildingNums\": [\"5\", \"6\", \"8\"],\n    \"propertyPercentage\": 100\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/lead/{{scorpion_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"lead",
						"{{scorpion_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Scorpion Attic Dusting Entity",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"scorpion_id1\", pm.response.json().id);",
							"",
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.propertyName).to.eq(\"stingers\");",
							"    pm.expect(res.photos.length).to.be.above(0);",
							"    pm.expect(res.buildingNums.length).to.eq(2);",
							"    pm.expect(res.service).to.eq(\"scorpion attic dusting\");",
							"    pm.expect(res.targetPest).to.eq(\"scorpion\");",
							"    pm.expect(res.status).to.eq(\"new\");",
							"    pm.expect(res.accessPoints).to.eq(5);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"buildingNums\": [\"5\", \"6\"],\n    \"accessPoints\": 5,\n    \"photos\": [\"mockphoto@faker.com\"],\n    \"service\": \"Scorpion Attic Dusting\",\n    \"targetPest\": \"Scorpion\",\n    \"propertyName\": \"Stingers\",\n    \"address\": \"456 N. Smart St.\",\n    \"city\": \"Mesa\",\n    \"state\": \"AZ\",\n    \"zipCode\": \"85233\",\n    \"technician\": \"S. Destroyer\",\n    \"madeContact\": true,\n    \"contactName\": \"Ovie Whelmed\",\n    \"contactTitle\": \"manager\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/lead",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"lead"
					]
				}
			},
			"response": []
		},
		{
			"name": "Interior Scorpion Entity",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"scorpion_id1\", pm.response.json().id);",
							"",
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.propertyName).to.eq(\"stingers\");",
							"    pm.expect(res.photos.length).to.be.above(0);",
							"    pm.expect(res.unitNums.length).to.eq(2);",
							"    pm.expect(res.service).to.eq(\"interior scorpion\");",
							"    pm.expect(res.targetPest).to.eq(\"scorpion\");",
							"    pm.expect(res.status).to.eq(\"new\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"unitNums\": [\"1235\", \"605\"],\n    \"observations\": \"baby scorpions runnin around\",\n    \"photos\": [\"mockphoto@faker.com\"],\n    \"service\": \"Interior Scorpion\",\n    \"targetPest\": \"Scorpion\",\n    \"propertyName\": \"Stingers\",\n    \"address\": \"456 N. Smart St.\",\n    \"city\": \"Mesa\",\n    \"state\": \"AZ\",\n    \"zipCode\": \"85233\",\n    \"technician\": \"S. Destroyer\",\n    \"madeContact\": true,\n    \"contactName\": \"Ovie Whelmed\",\n    \"contactTitle\": \"manager\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/lead",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"lead"
					]
				}
			},
			"response": []
		},
		{
			"name": "Snake Entity",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"snake_id1\", pm.response.json().id);",
							"",
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.propertyName).to.eq(\"the net\");",
							"    pm.expect(res.state).to.eq(\"az\");",
							"    pm.expect(res.photos.length).to.be.above(0);",
							"    pm.expect(res.service).to.eq(\"snake\");",
							"    pm.expect(res.targetPest).to.eq(\"snake\");",
							"    pm.expect(res.status).to.eq(\"new\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"photos\": [\"mockphoto@faker.com\"],\n    \"service\": \"Snake\",\n    \"targetPest\": \"Snake\",\n    \"propertyName\": \"The Net\",\n    \"address\": \"456 N. Smart St.\",\n    \"city\": \"Mesa\",\n    \"state\": \"AZ\",\n    \"zipCode\": \"85233\",\n    \"technician\": \"S. Destroyer\",\n    \"madeContact\": true,\n    \"contactName\": \"Slytherin\",\n    \"contactTitle\": \"manager\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/lead",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"lead"
					]
				}
			},
			"response": []
		},
		{
			"name": "Snake Entity by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.id).to.eq(pm.environment.get(\"snake_id1\"));",
							"    pm.expect(res.propertyName).to.eq(\"the net\");",
							"    pm.expect(res.state).to.eq(\"az\");",
							"    pm.expect(res.photos.length).to.be.above(0);",
							"    pm.expect(res.service).to.eq(\"snake\");",
							"    pm.expect(res.targetPest).to.eq(\"snake\");",
							"    pm.expect(res.status).to.eq(\"new\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/lead/{{snake_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"lead",
						"{{snake_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Snake Entity by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.id).to.eq(pm.environment.get(\"snake_id1\"));",
							"    pm.expect(res.photos.length).to.be.above(0);",
							"    pm.expect(res.propertyName).to.eq(\"the good place\");",
							"    pm.expect(res.status).to.eq(\"new\");",
							"    pm.expect(res.service).to.eq(\"snake\");",
							"    pm.expect(res.targetPest).to.eq(\"snake\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"propertyName\": \"The Good Place\",\n    \"notes\": \"Lotta snakes y'all\",\n    \"status\": \"New\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/lead/{{snake_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"lead",
						"{{snake_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Exterior Termite Entity",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"termite_id1\", pm.response.json().id);",
							"",
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.numTubes).to.eq(20);",
							"    pm.expect(res.tubeDistance).to.eq(10);",
							"    pm.expect(res.drillingDistance).to.eq(5);",
							"    pm.expect(res.trenchingDistance).to.eq(7);",
							"    pm.expect(res.isDrywood).to.eq(true);",
							"    pm.expect(res.photos.length).to.be.above(0);",
							"    pm.expect(res.service).to.eq(\"exterior termite\");",
							"    pm.expect(res.targetPest).to.eq(\"termite\");",
							"    pm.expect(res.status).to.eq(\"new\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"photos\": [\"mockphoto@faker.com\"],\n    \"buildingNums\": [\"5\", \"6\"],\n    \"numTubes\": 20,\n    \"tubeDistance\": 10,\n    \"drillingDistance\": 5,\n    \"trenchingDistance\": 7,\n    \"isDrywood\": true,\n    \"service\": \"Exterior Termite\",\n    \"targetPest\": \"Termite\",\n    \"propertyName\": \"The Good Place\",\n    \"address\": \"456 N. Smart St.\",\n    \"city\": \"Las Vegas\",\n    \"state\": \"NV\",\n    \"zipCode\": \"85233\",\n    \"technician\": \"T. Destroyer\",\n    \"madeContact\": true,\n    \"contactName\": \"Ovie Whelmed\",\n    \"contactTitle\": \"manager\",\n    \"notes\": \"wood shavin's e'rywhere\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/lead",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"lead"
					]
				}
			},
			"response": []
		},
		{
			"name": "Exterior Termite Entity by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.id).to.eq(pm.environment.get(\"termite_id1\"));",
							"    pm.expect(res.numTubes).to.eq(20);",
							"    pm.expect(res.tubeDistance).to.eq(10);",
							"    pm.expect(res.drillingDistance).to.eq(5);",
							"    pm.expect(res.trenchingDistance).to.eq(7);",
							"    pm.expect(res.isDrywood).to.eq(true);",
							"    pm.expect(res.photos.length).to.be.above(0);",
							"    pm.expect(res.service).to.eq(\"exterior termite\");",
							"    pm.expect(res.targetPest).to.eq(\"termite\");",
							"    pm.expect(res.status).to.eq(\"new\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/lead/{{termite_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"lead",
						"{{termite_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Exterior Termite Entity by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.id).to.eq(pm.environment.get(\"termite_id1\"));",
							"    pm.expect(res.propertyName).to.eq(\"the good place\");",
							"    pm.expect(res.numTubes).to.eq(21);",
							"    pm.expect(res.tubeDistance).to.eq(11);",
							"    pm.expect(res.drillingDistance).to.eq(6);",
							"    pm.expect(res.trenchingDistance).to.eq(8);",
							"    pm.expect(res.isDrywood).to.eq(false);",
							"    pm.expect(res.photos.length).to.be.above(0);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"buildingNums\": [\"5\", \"6\", \"8\"],\n    \"numTubes\": 21,\n    \"tubeDistance\": 11,\n    \"drillingDistance\": 6,\n    \"trenchingDistance\": 8,\n    \"isDrywood\": false,\n    \"status\": \"Open\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/lead/{{termite_id1}}",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"lead",
						"{{termite_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Interior Termite Entity",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"termite_id1\", pm.response.json().id);",
							"",
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.unitNums.length).to.eq(2);",
							"    pm.expect(res.photos.length).to.be.above(0);",
							"    pm.expect(res.service).to.eq(\"interior termite\");",
							"    pm.expect(res.targetPest).to.eq(\"termite\");",
							"    pm.expect(res.status).to.eq(\"new\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"photos\": [\"mockphoto@faker.com\"],\n    \"unitNums\": [\"1203\", \"1205\"],\n    \"location\": \"near sliding glass door\",\n    \"service\": \"Interior Termite\",\n    \"targetPest\": \"Termite\",\n    \"propertyName\": \"The Good Place\",\n    \"address\": \"456 N. Smart St.\",\n    \"city\": \"Las Vegas\",\n    \"state\": \"NV\",\n    \"zipCode\": \"85233\",\n    \"technician\": \"T. Destroyer\",\n    \"madeContact\": true,\n    \"contactName\": \"Ovie Whelmed\",\n    \"contactTitle\": \"manager\",\n    \"notes\": \"wood shavin's e'rywhere\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/lead",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"lead"
					]
				}
			},
			"response": []
		},
		{
			"name": "Carpet Beetle Entity",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"termite_id1\", pm.response.json().id);",
							"",
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.unitNums.length).to.eq(2);",
							"    pm.expect(res.photos.length).to.be.above(0);",
							"    pm.expect(res.service).to.eq(\"carpet beetle\");",
							"    pm.expect(res.targetPest).to.eq(\"general pest\");",
							"    pm.expect(res.status).to.eq(\"new\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"photos\": [\"mockphoto@faker.com\"],\n    \"unitNums\": [\"1203\", \"1205\"],\n    \"observations\": \"beetles hiding in the carpet\",\n    \"service\": \"Carpet Beetle\",\n    \"targetPest\": \"General Pest\",\n    \"propertyName\": \"The Good Place\",\n    \"address\": \"456 N. Smart St.\",\n    \"city\": \"Las Vegas\",\n    \"state\": \"NV\",\n    \"zipCode\": \"85233\",\n    \"technician\": \"T. Destroyer\",\n    \"madeContact\": true,\n    \"contactName\": \"Ovie Whelmed\",\n    \"contactTitle\": \"manager\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/lead",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"lead"
					]
				}
			},
			"response": []
		},
		{
			"name": "Full Property Exterior Spray Entity",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"termite_id1\", pm.response.json().id);",
							"",
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json();",
							"    pm.expect(res.buildingNums.length).to.eq(2);",
							"    pm.expect(res.photos.length).to.be.above(0);",
							"    pm.expect(res.service).to.eq(\"full property exterior spray\");",
							"    pm.expect(res.targetPest).to.eq(\"general pest\");",
							"    pm.expect(res.pest).to.eq(\"ants\");",
							"    pm.expect(res.status).to.eq(\"new\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"photos\": [\"mockphoto@faker.com\"],\n    \"buildingNums\": [\"12\", \"13\"],\n    \"observations\": \"giant ant hill\",\n    \"pest\": \"Ants\",\n    \"service\": \"full Property exterior spray\",\n    \"targetPest\": \"General Pest\",\n    \"propertyName\": \"The Oasis\",\n    \"address\": \"456 N. Smart St.\",\n    \"city\": \"Las Vegas\",\n    \"state\": \"NV\",\n    \"zipCode\": \"85233\",\n    \"technician\": \"T. Destroyer\",\n    \"madeContact\": true,\n    \"contactName\": \"Ovie Whelmed\",\n    \"contactTitle\": \"manager\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/lead",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"lead"
					]
				}
			},
			"response": []
		},
		{
			"name": "All Leads",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const cursor = encodeURIComponent(pm.response.json().nextPageCursor);",
							"pm.environment.set(\"cursor\", cursor);",
							"",
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.expect(pm.response.json().entities.length).to.be.eq(5);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/leads?limit=5",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"leads"
					],
					"query": [
						{
							"key": "limit",
							"value": "5"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "All Leads Using Cursor & Limit",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const cursor = encodeURIComponent(pm.response.json().nextPageCursor);",
							"pm.environment.set(\"cursor2\", cursor);",
							"",
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/leads?cursor={{cursor}}&limit=5",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"leads"
					],
					"query": [
						{
							"key": "cursor",
							"value": "{{cursor}}"
						},
						{
							"key": "limit",
							"value": "5"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "All Leads Using Cursor & Limit Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const cursor = encodeURIComponent(pm.response.json().nextPageCursor);",
							"pm.environment.set(\"cursor2\", cursor);",
							"",
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_2}}/leads?cursor={{cursor2}}&limit=5",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"leads"
					],
					"query": [
						{
							"key": "cursor",
							"value": "{{cursor2}}"
						},
						{
							"key": "limit",
							"value": "5"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Search: madeContact + targetPest + service",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json().entities;",
							"    pm.expect(res.length).to.be.above(0);",
							"    pm.expect(res[0].propertyName).to.eq(\"the good place\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"search\": {\n        \"limit\": 5,\n        \"filters\": [\n            [\"targetPest\", \"general pest\"],\n            [\"madeContact\", \"=\", true],\n            [\"service\", \"carpet beetle\"]\n        ]\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/leads/search",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"leads",
						"search"
					]
				}
			},
			"response": []
		},
		{
			"name": "Search: propertyName + dateCreated",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json().entities;",
							"    pm.expect(res.length).to.be.above(0);",
							"    pm.expect(res[0].propertyName).to.eq(\"the good place\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"search\": {\n        \"limit\": 1,\n        \"filters\": [\n           [\"propertyName\", \"=\", \"the good place\"],\n           [\"dateCreated\", \"<=\", \"02-15-2022\"],\n           [\"dateCreated\", \">\", \"02-13-2022\"]\n        ]\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/leads/search",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"leads",
						"search"
					]
				}
			},
			"response": []
		},
		{
			"name": "Search: service + propertyName",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json().entities;",
							"    pm.expect(res.length).to.be.above(0);",
							"    pm.expect(res[0].service).to.eq(\"carpet beetle\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"search\": {\n       \"filters\": [\n           [\"service\", \"=\", \"Carpet Beetle\"],\n           [\"propertyName\", \"=\", \"the good place\"]\n        ]\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/leads/search",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"leads",
						"search"
					]
				}
			},
			"response": []
		},
		{
			"name": "Search: service + dateCreated",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json().entities;",
							"    pm.expect(res.length).to.be.above(0);",
							"    pm.expect(res[0].service).to.eq(\"carpet beetle\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"search\": {\n       \"filters\": [\n           [\"service\", \"=\", \"carpet beetle\"],\n           [\"dateCreated\", \"<=\", \"02-15-2022\"],\n           [\"dateCreated\", \">\", \"02-13-2022\"]  \n        ]\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/leads/search",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"leads",
						"search"
					]
				}
			},
			"response": []
		},
		{
			"name": "Search: state + propertyName",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json().entities;",
							"    pm.expect(res.length).to.be.above(0);",
							"    pm.expect(res[0].state).to.eq(\"nv\");",
							"    pm.expect(res[0].propertyName).to.eq(\"the oasis\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"search\": {\n       \"filters\": [\n           [\"state\", \"=\", \"nv\"],\n           [\"propertyName\", \"=\", \"the oasis\"]\n        ]\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/leads/search",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"leads",
						"search"
					]
				}
			},
			"response": []
		},
		{
			"name": "Search: state + dateCreated",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json().entities;",
							"    pm.expect(res.length).to.be.above(0);",
							"    pm.expect(res[0].state).to.eq(\"nv\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"search\": {\n       \"filters\": [\n           [\"state\", \"=\", \"nv\"],\n           [\"dateCreated\", \"<=\", \"02-15-2022\"],\n           [\"dateCreated\", \">\", \"02-13-2022\"]\n        ]\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/leads/search",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"leads",
						"search"
					]
				}
			},
			"response": []
		},
		{
			"name": "Search: status + dateCreated",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json().entities;",
							"    pm.expect(res.length).to.be.lessThan(31);",
							"    pm.expect(res[0].status).to.eq(\"new\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"search\": {\n       \"filters\": [\n           [\"status\", \"=\", \"New\"]\n        ],\n        \"limit\": 30\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/leads/search",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"leads",
						"search"
					]
				}
			},
			"response": []
		},
		{
			"name": "Search: status + propertyName",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json().entities;",
							"    pm.expect(res.length).to.be.lessThan(31);",
							"    pm.expect(res[0].status).to.eq(\"new\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"search\": {\n       \"filters\": [\n           [\"status\", \"=\", \"New\"],\n           [\"propertyName\", \"the oasis\"]\n        ],\n        \"limit\": 1\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/leads/search",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"leads",
						"search"
					]
				}
			},
			"response": []
		},
		{
			"name": "Search: targetPest + dateCreated",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const cursor = pm.response.json().nextPageCursor;",
							"pm.environment.set(\"cursor3\", cursor);",
							"",
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json().entities;",
							"    pm.expect(res.length).to.be.above(0);",
							"    pm.expect(res[0].targetPest).to.eq(\"roach\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"search\": {\n       \"limit\": 5,\n       \"filters\": [\n           [\"targetPest\", \"=\", \"Roach\"]\n        ]\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/leads/search",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"leads",
						"search"
					]
				}
			},
			"response": []
		},
		{
			"name": "Search: targetPest cursor",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json().entities;",
							"    pm.expect(res.length).to.be.above(0);",
							"    pm.expect(res[0].targetPest).to.eq(\"roach\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"search\": {\n       \"filters\": [\n           [\"targetPest\", \"=\", \"Roach\"]\n        ],\n        \"limit\": 2,\n        \"start\": \"{{cursor3}}\"\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/leads/search",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"leads",
						"search"
					]
				}
			},
			"response": []
		},
		{
			"name": "Search: targetPest + propertyName",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json().entities;",
							"    pm.expect(res.length).to.be.above(0);",
							"    pm.expect(res[0].targetPest).to.eq(\"roach\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"search\": {\n       \"limit\": 5,\n       \"filters\": [\n           [\"targetPest\", \"=\", \"Roach\"],\n           [\"propertyName\", \"roach motel\"]\n        ]\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/leads/search",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"leads",
						"search"
					]
				}
			},
			"response": []
		},
		{
			"name": "Search: technician + dateCreated",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json().entities;",
							"    pm.expect(res.length).to.be.above(0);",
							"    pm.expect(res[0].technician).to.eq(\"ryan owens\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"search\": {\n       \"filters\": [\n           [\"technician\", \"=\", \"Ryan Owens\"]\n        ]\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/leads/search",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"leads",
						"search"
					]
				}
			},
			"response": []
		},
		{
			"name": "Search: technician + targetPest",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"content is valid\", function () {",
							"    const res = pm.response.json().entities;",
							"    pm.expect(res.length).to.be.above(0);",
							"    pm.expect(res[0].technician).to.eq(\"ryan owens\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"search\": {\n       \"filters\": [\n           [\"technician\", \"=\", \"Ryan Owens\"],\n           [\"targetPest\", \"roach\"]\n        ]\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/leads/search",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"leads",
						"search"
					]
				}
			},
			"response": []
		},
		{
			"name": "Search: dateCreated + propertyName",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"search\": {\n        \"order\": [\n            { \"property\": \"dateCreated\", \"descending\": true }\n            \n        ],\n       \"filters\": [\n           [\"dateCreated\", \"<=\", \"02-15-2022\"],\n           [\"dateCreated\", \">\", \"02-13-2022\"],\n           [\"propertyName\", \"the good place\"]\n        ]\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_2}}/leads/search",
					"host": [
						"{{url_2}}"
					],
					"path": [
						"leads",
						"search"
					]
				}
			},
			"response": []
		}
	]
}